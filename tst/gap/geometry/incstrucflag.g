#incidence structures (geometry.gi)
pg := PG(4,2);
pg2 := PG(9,2);
points := List(Lines(pg),x->VectorSpaceToElement(pg2,GrassmannCoordinates(x)));;
flags := Concatenation(List(Points(pg),x->List(Planes(x),y->FlagOfIncidenceStructure(pg,[x,y]))));;
prelines := List(flags,flag->ShadowOfFlag(pg,flag,2));;
lines := List(prelines,x->VectorSpaceToElement(pg2,List(x,y->GrassmannCoordinates(y))));;
flags2 := Concatenation(List(Points(pg),x->List(Solids(x),y->FlagOfIncidenceStructure(pg,[x,y]))));;
preplanes := List(flags2,flag->ShadowOfFlag(pg,flag,2));;
planes := List(preplanes,x->VectorSpaceToElement(pg2,List(x,y->GrassmannCoordinates(y))));;
maximals1 := List(Planes(pg),x->VectorSpaceToElement(pg2,List(Lines(x),y->GrassmannCoordinates(y))));;
maximals2 := List(Points(pg),x->VectorSpaceToElement(pg2,List(Lines(x),y->GrassmannCoordinates(y))));;
elements := Union(points,lines,planes,maximals1,maximals2);;
Length(elements);
type := x -> ProjectiveDimension(x)+1;
inc_rel := \*;
inc := IncidenceStructure(elements,inc_rel,type,[1,2,3,4]);
Rank(inc);
pt := ObjectToElement(inc,1,points[1]);
line := ObjectToElement(inc,2,lines[2]);
IsIncident(pt,line);
flag1 := FlagOfIncidenceStructure(inc,[]);
flag2 := FlagOfIncidenceStructure(inc,[pt,line]);
AmbientGeometry(flag2);
Size(flag2);
Rank(flag2);
ResidueOfFlag(flag2);
flag1 = flag2;
flag1 < flag2;
pt < flag1;
IsIncident(pt,flag1);
IsIncident(flag1,line);
pt in flag1;
line in flag2;
shad := ShadowOfElement(inc,pt,3);
shad2 := ShadowOfFlag(inc,flag2,3);
shad3 := ShadowOfFlag(inc,[pt,line],4);
Iterator(shad3);
IsConfiguration(inc);
IsConstellation(inc);
quit;
