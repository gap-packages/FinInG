#test some enumerators of polar spaces. We have to make a selection
ps := ParabolicQuadric(4,8);
els := Points(ps);
enum := Enumerator(Points(ps));
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
els := Lines(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
ps := ParabolicQuadric(6,2);
els := Points(ps);
enum := Enumerator(Points(ps));
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
els := Lines(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
els := Planes(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
ps := ParabolicQuadric(6,3);
els := Points(ps);
enum := Enumerator(Points(ps));
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
ps := ParabolicQuadric(6,3);
els := Points(ps);
enum := Enumerator(Points(ps));
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
ps := EllipticQuadric(3,7);
els := Points(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
ps := EllipticQuadric(5,3);
els := Points(ps);
enum := Enumerator(Points(ps));
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
els := Lines(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
ps := HyperbolicQuadric(3,9);
els := Points(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
els := Lines(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
ps := HyperbolicQuadric(5,2);
els := Points(ps);
enum := Enumerator(Points(ps));
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
els := Lines(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
els := Planes(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
ps := HermitianPolarSpace(3,9);
els := Points(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
els := Lines(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
ps := HermitianPolarSpace(4,4);
els := Points(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
els := Lines(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
ps := SymplecticSpace(3,9);
els := Points(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
els := Lines(ps);
enum := Enumerator(els);
Collected(List(AsList(els),x->enum[Position(enum,x)]=x));
quit;
