Methods

geometry.gi: methods

M: IncidenceStructure, [ IsList, IsFunction, IsFunction, IsList ],
M: Rank, [IsIncidenceStructure],
M: IncidenceGraph, [ IsIncidenceStructure ],
M: ElementsOfIncidenceStructure, [IsIncidenceStructure, IsPosInt],
M: ElementsOfIncidenceStructure, [IsIncidenceStructure, IsString],
M: Iterator, [ IsElementsOfIncidenceStructure ],
M: Enumerator, [ IsElementsOfIncidenceStructure ],
M: NrElementsOfIncidenceStructure, [IsIncidenceStructure, IsString],
M: NrElementsOfIncidenceStructure, [IsIncidenceStructure, IsPosInt],
M: ChooseHashFunction, [ IsElementOfIncidenceStructure, IsPosInt ],
M: ChooseHashFunction, [ CategoryCollections(IsElementOfIncidenceStructure), IsPosInt ],
M: AmbientGeometry, [ IsElementsOfIncidenceStructure and IsElementsOfIncidenceStructureRep ],
M: AmbientGeometry, [ IsAllElementsOfIncidenceStructure ],
M: Type, [IsElementsOfIncidenceStructure and IsElementsOfIncidenceStructureRep],
M: Wrap, [IsIncidenceStructure, IsPosInt, IsObject],
M: Unwrap, [IsElementOfIncidenceStructure and IsElementOfIncidenceStructureRep],
M: UnderlyingObject, [ IsElementOfIncidenceStructure and IsElementOfIncidenceStructureRep ],
M: ObjectToElement, [ IsIncidenceStructure, IsPosInt, IsObject ],
M: AmbientGeometry, [ IsElementOfIncidenceStructure and IsElementOfIncidenceStructureRep ],
M: Intersection2, [IsElementOfIncidenceStructure, IsElementOfIncidenceStructure],
M: Type, [ IsElementOfIncidenceStructure and IsElementOfIncidenceStructureRep ],
M: \=, [IsElementOfIncidenceStructure, IsElementOfIncidenceStructure],
M: \&lt;, [IsElementOfIncidenceStructure, IsElementOfIncidenceStructure],
M: \*, [IsElementOfIncidenceStructure, IsElementOfIncidenceStructure],
M: IsIncident, [IsElementOfIncidenceStructure, IsElementOfIncidenceStructure],
M: FlagOfIncidenceStructure, [ IsIncidenceStructure, IsElementOfIncidenceStructureCollection ],
M: FlagOfIncidenceStructure, [ IsIncidenceStructure, IsList and IsEmpty ],
M: IsChamberOfIncidenceStructure, [ IsFlagOfIncidenceStructure and IsFlagOfIncidenceStructureRep ],
M: AmbientGeometry, [ IsFlagOfIncidenceStructure and IsFlagOfIncidenceStructureRep],
M: ElementsOfFlag, [ IsFlagOfIncidenceStructure and IsFlagOfIncidenceStructureRep ],
M: Size, [ IsFlagOfIncidenceStructure and IsFlagOfIncidenceStructureRep ],
M: Rank, [ IsFlagOfIncidenceStructure ],
M: Type, [ IsFlagOfIncidenceStructure and IsFlagOfIncidenceStructureRep ],
M: ResidueOfFlag, [ IsFlagOfIncidenceStructure ],
M: \=, [ IsFlagOfIncidenceStructure, IsFlagOfIncidenceStructure ],
M: \&lt;, [ IsFlagOfIncidenceStructure, IsFlagOfIncidenceStructure ],
M: \&lt;, [ IsFlagOfIncidenceStructure, IsElementOfIncidenceStructure ],
M: \&lt;, [ IsElementOfIncidenceStructure, IsFlagOfIncidenceStructure ],
M: IsIncident, [ IsElementOfIncidenceStructure, IsFlagOfIncidenceStructure ],
M: IsIncident, [IsFlagOfIncidenceStructure, IsElementOfIncidenceStructure],
M: \in, [ IsElementOfIncidenceStructure, IsFlagOfIncidenceStructure ],
M: ShadowOfElement, [IsIncidenceStructure, IsElementOfIncidenceStructure, IsPosInt],
M: ShadowOfElement, [IsIncidenceStructure, IsElementOfIncidenceStructure, IsString],
M: ElementsIncidentWithElementOfIncidenceStructure, [ IsElementOfIncidenceStructure, IsPosInt],
M: ShadowOfFlag, [IsIncidenceStructure, IsFlagOfIncidenceStructure, IsPosInt],
M: ShadowOfFlag, [IsIncidenceStructure, IsFlagOfIncidenceStructure, IsString],
M: ShadowOfFlag, [IsIncidenceStructure, IsList, IsPosInt],
M: ShadowOfFlag, [IsIncidenceStructure, IsList, IsString],
M: Iterator, [ IsShadowElementsOfIncidenceStructure ],
M: ViewObj, [ IsElementOfIncidenceStructure and IsElementOfIncidenceStructureRep ],
M: ViewObj, [ IsFlagOfIncidenceStructure and IsFlagOfIncidenceStructureRep ],
M: PrintObj, [ IsElementOfIncidenceStructure and IsElementOfIncidenceStructureRep ],
M: Display, [ IsElementOfIncidenceStructure and IsElementOfIncidenceStructureRep ],
M: ViewObj, [ IsAllElementsOfIncidenceStructure ],
M: PrintObj, [ IsAllElementsOfIncidenceStructure ],
M: ViewObj, [ IsShadowElementsOfIncidenceStructure ],
M: ViewObj, [ IsElementsOfIncidenceStructure ],
M: PrintObj, [ IsElementsOfIncidenceStructure ],
M: ViewObj, [ IsIncidenceStructure ],
M: PrintObj, [ IsIncidenceStructure ],
M: Display, [ IsIncidenceStructure ],
M: IsConfiguration, [ IsIncidenceStructure],
M: IsConstellation, [ IsIncidenceStructure],

liegeometry.gi: methods

M: UnderlyingVectorSpace, [ IsLieGeometry],
M: ProjectiveDimension, [ IsLieGeometry ],
M: Dimension, [ IsLieGeometry ],
M: BaseField, [ IsLieGeometry ],
M: Wrap, [IsLieGeometry, IsPosInt, IsObject],
M: UnderlyingObject, [IsElementOfLieGeometry],
M: AmbientSpace, [IsElementOfLieGeometry],
M: ViewObj, [ IsAllElementsOfLieGeometry and IsAllElementsOfLieGeometryRep ],
M: PrintObj, [ IsAllElementsOfLieGeometry and IsAllElementsOfLieGeometryRep ],
M: ViewObj, [ IsElementsOfLieGeometry and IsElementsOfLieGeometryRep ],
M: PrintObj, [ IsElementsOfLieGeometry and IsElementsOfLieGeometryRep ],
M: Points, [IsLieGeometry],
M: Lines, [IsLieGeometry],
M: Planes, [IsLieGeometry],
M: Solids, [IsLieGeometry],
M: EmptySubspace, [IsLieGeometry],
M: BaseField, [IsEmptySubspace and IsEmptySubspaceRep],
M: ViewObj, InstallMethod(ViewObj,[IsEmptySubspace],
M: PrintObj, InstallMethod(PrintObj,[IsEmptySubspace],
M: Display, InstallMethod(Display,[IsEmptySubspace],
M: \=, [IsEmptySubspace, IsEmptySubspace],
M: \in, [ IsEmptySubspace, IsEmptySubspace ],
M: \in, [ IsEmptySubspace, IsElementOfLieGeometry ],
M: \in, [ IsElementOfLieGeometry, IsEmptySubspace ],
M: \in, [ IsEmptySubspace, IsLieGeometry ],
M: Span, [ IsEmptySubspace, IsElementOfLieGeometry ],
M: Span, [ IsElementOfLieGeometry, IsEmptySubspace ],
M: Span, [IsEmptySubspace, IsEmptySubspace],
M: Meet, [ IsEmptySubspace, IsElementOfLieGeometry ],
M: Meet, [ IsElementOfLieGeometry, IsEmptySubspace ],
M: Meet, [IsEmptySubspace, IsEmptySubspace],
M: Points, [ IsElementOfLieGeometry ],
M: Points, [ IsLieGeometry, IsElementOfLieGeometry ],
M: Lines, [ IsElementOfLieGeometry ],
M: Lines, [ IsLieGeometry, IsElementOfLieGeometry ],
M: Planes, [ IsElementOfLieGeometry ],
M: Planes, [ IsLieGeometry, IsElementOfLieGeometry ],
M: Solids, InstallMethod(Solids,[IsElementOfLieGeometry],
M: Solids, [ IsLieGeometry, IsElementOfLieGeometry ],
M: Hyperplanes, [ IsElementOfLieGeometry ],
M: Hyperplanes, [ IsLieGeometry, IsElementOfLieGeometry ],
M: ViewObj, [ IsShadowElementsOfLieGeometry and IsShadowElementsOfLieGeometryRep ],
M: \in, [IsElementOfLieGeometry, IsElementOfLieGeometry],
M: Random, [ IsSubspacesVectorSpace ],
M: RandomSubspace, [IsVectorSpace,IsInt],
M: ElementToElement, [IsLieGeometry, IsElementOfLieGeometry],
M: ObjectToElement, [IsLieGeometry, IsPosInt, IsObject],
M: ObjectToElement, [IsLieGeometry, IsObject],

group.gi: methods

M: ProjEl, [IsMatrix and IsFFECollColl],
M: ProjEls, [IsList],
M: Projectivity, InstallMethod(Projectivity,[IsMatrixandIsFFECollColl,IsField],
M: Projectivity, InstallMethod(Projectivity,[IsCMatRepandIsFFECollColl,IsField],
M: Projectivity, InstallMethod(Projectivity,[IsProjectiveSpace,IsMatrix],
M: Projectivity, InstallMethod(Projectivity,[IsProjectiveSpace,IsCMatRep],
M: IsProjectivity, InstallMethod(IsProjectivity,[IsProjGrpEl],
M: IsProjectivity, InstallMethod(IsProjectivity,[IsProjGrpElWithFrob],
M: IsStrictlySemilinear, InstallMethod(IsStrictlySemilinear,[IsProjGrpEl],
M: IsStrictlySemilinear, InstallMethod(IsStrictlySemilinear,[IsProjGrpElWithFrob],
M: IsCollineation, InstallMethod(IsCollineation,[IsProjGrpEl],
M: IsCollineation, InstallMethod(IsCollineation,[IsProjGrpElWithFrob],
M: IsProjectivityGroup, InstallMethod(IsProjectivityGroup,[IsProjectiveGroupWithFrob],
M: IsCollineationGroup, InstallMethod(IsCollineationGroup,[IsProjectiveGroupWithFrob],
M: ProjElWithFrob, [IsCMatRep and IsFFECollColl, #changed 19/3/14 to cmat. IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsField],
M: ProjElWithFrob, [IsMatrix and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsField],
M: ProjElWithFrob, [IsCMatRep and IsFFECollColl, #changed 19/3/14. IsRingHomomorphism and IsMultiplicativeElementWithInverse],
M: ProjElWithFrob, [IsCMatRep and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse],
M: ProjElsWithFrob, [IsList, IsField],
M: ProjElsWithFrob, [IsList],
M: CollineationOfProjectiveSpace, [ IsMatrix and IsFFECollColl, IsField],
M: CollineationOfProjectiveSpace, InstallMethod(CollineationOfProjectiveSpace,[IsProjectiveSpace,IsMatrix],
M: CollineationOfProjectiveSpace, InstallMethod(CollineationOfProjectiveSpace,[IsProjectiveSpace,IsMapping],
M: CollineationOfProjectiveSpace, InstallMethod(CollineationOfProjectiveSpace,[IsProjectiveSpace,IsMatrix,IsMapping],
M: Collineation, InstallMethod(Collineation,[IsProjectiveSpace,IsMatrix],
M: Collineation, InstallMethod(Collineation,[IsProjectiveSpace,IsMatrix,IsMapping],
M: CollineationOfProjectiveSpace, [ IsMatrix and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsField],
M: ProjectiveSemilinearMap, [ IsMatrix and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsField],
M: ProjectivityByImageOfStandardFrameNC, InstallMethod(ProjectivityByImageOfStandardFrameNC,[IsProjectiveSpace,IsList],
M: MatrixOfCollineation, InstallMethod(MatrixOfCollineation,[IsProjGrpElandIsProjGrpElRep],
M: MatrixOfCollineation, InstallMethod(MatrixOfCollineation,[IsProjGrpElWithFrobandIsProjGrpElWithFrobRep],
M: FieldAutomorphism, InstallMethod(FieldAutomorphism,[IsProjGrpElWithFrobandIsProjGrpElWithFrobRep],
M: Representative, [IsProjGrpEl and IsProjGrpElRep],
M: BaseField, [IsProjGrpEl and IsProjGrpElRep],
M: Representative, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: BaseField, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: ViewObj, [IsProjGrpEl and IsProjGrpElRep],
M: Display, [IsProjGrpEl and IsProjGrpElRep],
M: PrintObj, [IsProjGrpEl and IsProjGrpElRep],
M: ViewObj, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: Display, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: PrintObj, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: \=, [IsProjGrpEl and IsProjGrpElRep, IsProjGrpEl and IsProjGrpElRep],
M: \&lt;, [IsProjGrpEl, IsProjGrpEl],
M: \=, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep, IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: \&lt;, [IsProjGrpElWithFrob, IsProjGrpElWithFrob],
M: Order, [IsProjGrpEl and IsProjGrpElRep],
M: Order, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: IsOne, [IsProjGrpEl and IsProjGrpElRep],
M: IsOne, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: DegreeFFE, [IsProjGrpEl and IsProjGrpElRep],
M: DegreeFFE, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: Characteristic, [IsProjGrpEl and IsProjGrpElRep],
M: Characteristic, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: \*, [IsProjGrpEl and IsProjGrpElRep, IsProjGrpEl and IsProjGrpElRep],
M: InverseSameMutability, [IsProjGrpEl and IsProjGrpElRep],
M: InverseMutable, [IsProjGrpEl and IsProjGrpElRep],
M: OneImmutable, [IsProjGrpEl and IsProjGrpElRep],
M: OneSameMutability, [IsProjGrpEl and IsProjGrpElRep],
M: \^, [ IsVector and IsFFECollection and IsMutable, IsFrobeniusAutomorphism ],
M: \^, [ IsCVecRep and IsFFECollection and IsMutable, IsFrobeniusAutomorphism ],
M: \^, [ IsVector and IsFFECollection, IsFrobeniusAutomorphism ],
M: \^, [ IsCVecRep and IsFFECollection, IsFrobeniusAutomorphism ],
M: \^, [ IsVector and IsFFECollection and IsMutable, IsMapping and IsOne ],
M: \^, [ IsCVecRep and IsFFECollection and IsMutable, IsMapping and IsOne ],
M: \^, [ IsVector and IsFFECollection and IsGF2VectorRep, IsFrobeniusAutomorphism ],
M: \^, [ IsVector and IsFFECollection and IsGF2VectorRep and IsMutable, IsFrobeniusAutomorphism ],
M: \^, [ IsVector and IsFFECollection and IsGF2VectorRep, IsMapping and IsOne ],
M: \^, [ IsVector and IsFFECollection and IsGF2VectorRep and IsMutable, IsMapping and IsOne ],
M: \^, [ IsVector and IsFFECollection and Is8BitVectorRep, IsFrobeniusAutomorphism ],
M: \^, [ IsVector and IsFFECollection and Is8BitVectorRep and IsMutable, IsFrobeniusAutomorphism ],
M: \^, [ IsVector and IsFFECollection and Is8BitVectorRep, IsMapping and IsOne ],
M: \^, [ IsVector and IsFFECollection and Is8BitVectorRep and IsMutable, IsMapping and IsOne ],
M: \^, [ IsMatrix and IsFFECollColl, IsFrobeniusAutomorphism ],
M: \^, [ IsCMatRep and IsFFECollColl, IsFrobeniusAutomorphism ],
M: \^, [ IsMatrix and IsFFECollColl and IsMutable, IsFrobeniusAutomorphism ],
M: \^, [ IsCMatRep and IsFFECollColl and IsMutable, IsFrobeniusAutomorphism ],
M: \^, [ IsMatrix and IsFFECollColl, IsMapping and IsOne ],
M: \^, [ IsCMatRep and IsFFECollColl and IsMutable, IsMapping and IsOne ],
M: \^, [ IsMatrix and IsFFECollColl, IsMapping and IsOne ],
M: \^, [ IsCMatRep and IsFFECollColl , IsMapping and IsOne ],
M: \^, [ IsMatrix and IsFFECollColl and IsGF2MatrixRep, IsFrobeniusAutomorphism ],
M: \^, [ IsMatrix and IsFFECollColl and IsGF2MatrixRep and IsMutable, IsFrobeniusAutomorphism ],
M: \^, [ IsMatrix and IsFFECollColl and IsGF2MatrixRep, IsMapping and IsOne ],
M: \^, [ IsMatrix and IsFFECollColl and IsGF2MatrixRep and IsMutable, IsMapping and IsOne ],
M: \^, [ IsMatrix and IsFFECollColl and Is8BitMatrixRep, IsFrobeniusAutomorphism ],
M: \^, [ IsMatrix and IsFFECollColl and Is8BitMatrixRep and IsMutable, IsFrobeniusAutomorphism ],
M: \^, [ IsMatrix and IsFFECollColl and Is8BitMatrixRep, IsMapping and IsOne ],
M: \^, [ IsMatrix and IsFFECollColl and Is8BitMatrixRep and IsMutable, IsMapping and IsOne ],
M: \*, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep, IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: InverseSameMutability, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: InverseMutable, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: OneImmutable, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: OneSameMutability, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: ViewObj, [IsProjectiveGroupWithFrob],
M: ViewObj, [IsProjectiveGroupWithFrob and IsTrivial],
M: ViewObj, [IsProjectiveGroupWithFrob and HasGeneratorsOfGroup],
M: ViewObj, [IsProjectiveGroupWithFrob and HasSize],
M: ViewObj, [IsProjectiveGroupWithFrob and HasGeneratorsOfGroup and HasSize],
M: BaseField, [IsProjectiveGroupWithFrob],
M: Dimension, [IsProjectiveGroupWithFrob],
M: OneImmutable, # was [IsGroup and IsProjectiveGroupWithFrob], I think might be
M: CanComputeActionOnPoints, [IsProjectiveGroupWithFrob],
M: ActionOnAllProjPoints, [ IsProjectiveGroupWithFrob ],
M: SetAsNiceMono, [IsProjectiveGroupWithFrob, IsGroupHomomorphism and IsInjective],
M: NiceMonomorphism, [IsProjectivityGroup and CanComputeActionOnPoints and IsHandledByNiceMonomorphism],
M: NiceMonomorphism, [IsProjectiveGroupWithFrob and IsHandledByNiceMonomorphism],
M: NiceMonomorphism, [IsProjectiveGroupWithFrob and CanComputeActionOnPoints and IsHandledByNiceMonomorphism], 1,
M: NiceMonomorphism, [IsProjectiveGroupWithFrob and IsHandledByNiceMonomorphism], 50,
M: FindBasePointCandidates, [IsProjectivityGroup,IsRecord,IsInt],
M: FindBasePointCandidates, [IsProjectiveGroupWithFrob,IsRecord,IsInt],
M: FindBasePointCandidates, [IsProjectiveGroupWithFrob,IsRecord,IsInt,IsObject],
M: CanonicalGramMatrix, [IsString, IsPosInt, IsField],
M: CanonicalQuadraticForm, [IsString, IsPosInt, IsField],
M: SOdesargues, [IsInt, IsPosInt, IsField and IsFinite],
M: GOdesargues, InstallMethod(GOdesargues,[IsInt,IsPosInt,IsFieldandIsFinite],
M: SUdesargues, InstallMethod(SUdesargues,[IsPosInt,IsFieldandIsFinite],
M: GUdesargues, InstallMethod(GUdesargues,[IsPosInt,IsFieldandIsFinite],
M: Spdesargues, InstallMethod(Spdesargues,[IsPosInt,IsFieldandIsFinite],
M: GeneralSymplecticGroup, InstallMethod(GeneralSymplecticGroup,[IsPosInt,IsFieldandIsFinite],
M: GSpdesargues, InstallMethod(GSpdesargues,[IsPosInt,IsFieldandIsFinite],
M: GammaSp, InstallMethod(GammaSp,[IsPosInt,IsFieldandIsFinite],
M: DeltaOminus, InstallMethod(DeltaOminus,[IsPosInt,IsFieldandIsFinite],
M: GammaOminus, InstallMethod(GammaOminus,[IsPosInt,IsFieldandIsFinite],
M: GammaO, InstallMethod(GammaO,[IsPosInt,IsFieldandIsFinite],
M: DeltaOplus, InstallMethod(DeltaOplus,[IsPosInt,IsFieldandIsFinite],
M: GammaOplus, InstallMethod(GammaOplus,[IsPosInt,IsFieldandIsFinite],
M: GammaU, InstallMethod(GammaU,[IsPosInt,IsFieldandIsFinite],

projectivespace.gi: methods

M: Wrap, [IsProjectiveSpace, IsPosInt, IsObject],
M: ProjectiveSpace, [ IsInt, IsField ],
M: ProjectiveSpace, [ IsInt, IsPosInt ],
M: ViewObj, InstallMethod(ViewObj,[IsProjectiveSpaceandIsProjectiveSpaceRep],
M: ViewString, [ IsProjectiveSpace and IsProjectiveSpaceRep ],
M: PrintObj, InstallMethod(PrintObj,[IsProjectiveSpaceandIsProjectiveSpaceRep],
M: Display, InstallMethod(Display,[IsProjectiveSpaceandIsProjectiveSpaceRep],
M: \=, [IsProjectiveSpace, IsProjectiveSpace],
M: Rank, [ IsProjectiveSpace and IsProjectiveSpaceRep ],
M: BaseField, [IsSubspaceOfProjectiveSpace],
M: StandardFrame, [IsProjectiveSpace],
M: RepresentativesOfElements, "for a projective space", [IsProjectiveSpace],
M: Hyperplanes, [ IsProjectiveSpace ],
M: TypesOfElementsOfIncidenceStructure, "for a projective space", [IsProjectiveSpace],
M: TypesOfElementsOfIncidenceStructurePlural, [IsProjectiveSpace],
M: ElementsOfIncidenceStructure, [IsProjectiveSpace, IsPosInt],
M: ElementsOfIncidenceStructure, [IsProjectiveSpace],
M: \=, [ IsAllSubspacesOfProjectiveSpace, IsAllSubspacesOfProjectiveSpace ],
M: Size, [IsSubspacesOfProjectiveSpace and IsSubspacesOfProjectiveSpaceRep],
M: \in, [IsElementOfIncidenceStructure, IsElementsOfIncidenceStructure], 1*SUM_FLAGS+3,
M: \in, [IsElementOfIncidenceStructure, IsAllElementsOfIncidenceStructure], 1*SUM_FLAGS+3,
M: VectorSpaceToElement, [IsProjectiveSpace, IsCMatRep],
M: VectorSpaceToElement, [IsProjectiveSpace, IsPlistRep and IsMatrix],
M: VectorSpaceToElement, [IsProjectiveSpace, IsGF2MatrixRep],
M: VectorSpaceToElement, [IsProjectiveSpace, Is8BitMatrixRep],
M: VectorSpaceToElement, [IsProjectiveSpace, IsCVecRep],
M: VectorSpaceToElement, [IsProjectiveSpace, IsRowVector],
M: VectorSpaceToElement, [IsProjectiveSpace, Is8BitVectorRep],
M: UnderlyingVectorSpace, [IsSubspaceOfProjectiveSpace],
M: ProjectiveDimension, [ IsSubspaceOfProjectiveSpace ],
M: Dimension, [ IsSubspaceOfProjectiveSpace ],
M: StandardFrame, [IsSubspaceOfProjectiveSpace],
M: Coordinates, [IsSubspaceOfProjectiveSpace],
M: DualCoordinatesOfHyperplane, [IsSubspaceOfProjectiveSpace],
M: HyperplaneByDualCoordinates, [IsProjectiveSpace,IsList],
M: EquationOfHyperplane, [IsSubspaceOfProjectiveSpace],
M: Span, [ IsEmptySubspace, IsProjectiveSpace ],
M: Span, [ IsProjectiveSpace, IsEmptySubspace ],
M: Meet, [ IsEmptySubspace, IsProjectiveSpace ],
M: Meet, [ IsProjectiveSpace, IsEmptySubspace ],
M: ShadowOfElement, [IsProjectiveSpace, IsSubspaceOfProjectiveSpace, IsPosInt],
M: Size, [IsShadowSubspacesOfProjectiveSpace and IsShadowSubspacesOfProjectiveSpaceRep ],
M: CollineationGroup, [ IsProjectiveSpace and IsProjectiveSpaceRep ],
M: ProjectivityGroup, [ IsProjectiveSpace ],
M: SpecialProjectivityGroup, [ IsProjectiveSpace ],
M: \^, [IsElementOfIncidenceStructure, IsProjGrpElWithFrob],
M: \^, [IsElementOfIncidenceStructure, IsProjGrpElWithFrobWithPSIsom],
M: AsList, [IsSubspacesOfProjectiveSpace],
M: Iterator, [IsSubspacesOfProjectiveSpace],
M: FlagOfIncidenceStructure, [ IsProjectiveSpace, IsSubspaceOfProjectiveSpaceCollection ],
M: FlagOfIncidenceStructure, [ IsProjectiveSpace, IsList and IsEmpty ],
M: UnderlyingVectorSpace, [ IsFlagOfProjectiveSpace and IsFlagOfIncidenceStructureRep ],
M: PrintObj, [ IsFlagOfProjectiveSpace and IsFlagOfIncidenceStructureRep ],
M: Display, [ IsFlagOfProjectiveSpace and IsFlagOfIncidenceStructureRep ],
M: ShadowOfFlag, [IsProjectiveSpace, IsFlagOfProjectiveSpace, IsPosInt],
M: Iterator, [IsShadowSubspacesOfProjectiveSpace and IsShadowSubspacesOfProjectiveSpaceRep ],
M: \in, [ IsProjectiveSpace, IsSubspaceOfProjectiveSpace ],
M: \in, [ IsProjectiveSpace, IsEmptySubspace ],
M: \in, [IsSubspaceOfProjectiveSpace, IsProjectiveSpace],
M: \in, [IsProjectiveSpace, IsSubspaceOfProjectiveSpace],
M: IsIncident, [IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace],
M: Span, [IsProjectiveSpace, IsSubspaceOfProjectiveSpace],
M: Span, [IsSubspaceOfProjectiveSpace, IsProjectiveSpace],
M: Span, [IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace],
M: Span, [IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace, IsBool],
M: Span, [ IsHomogeneousList and IsSubspaceOfProjectiveSpaceCollection ],
M: Span, [ IsList ],
M: Span, [IsList, IsBool],
M: Meet, [IsProjectiveSpace, IsSubspaceOfProjectiveSpace],
M: Meet, [IsSubspaceOfProjectiveSpace, IsProjectiveSpace],
M: Meet, [IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace],
M: Meet, [ IsHomogeneousList and IsSubspaceOfProjectiveSpaceCollection],
M: Meet, [ IsList ],
M: RandomSubspace, [IsProjectiveSpace,IsInt],
M: RandomSubspace, [IsSubspaceOfProjectiveSpace,IsInt],
M: RandomSubspace, [IsProjectiveSpace],
M: Random, [ IsSubspacesOfProjectiveSpace ],
M: Random, [ IsAllSubspacesOfProjectiveSpace ],
M: Random, [ IsShadowSubspacesOfProjectiveSpace ],
M: BaerSublineOnThreePoints, [IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace],
M: BaerSubplaneOnQuadrangle, InstallMethod(BaerSubplaneOnQuadrangle,[IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace],
M: ComplementSpace, [IsVectorSpace, IsFFECollColl],
M: ElationOfProjectiveSpace, [ IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace ],
M: ProjectiveElationGroup, [ IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace ],
M: ProjectiveElationGroup, [ IsSubspaceOfProjectiveSpace ],
M: HomologyOfProjectiveSpace, [ IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace ],
M: ProjectiveHomologyGroup, [ IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace ],
M: SingerCycleMat, InstallMethod(SingerCycleMat,[IsInt,IsInt],
M: SingerCycleCollineation, InstallMethod(SingerCycleCollineation,[IsInt,IsInt],
M: IncidenceGraph, [ IsProjectiveSpace ],

correlations.gi: methods

M: IdentityMappingOfElementsOfProjectiveSpace, [IsProjectiveSpace],
M: StandardDualityOfProjectiveSpace, [IsProjectiveSpace],
M: IsCollineation, InstallMethod(IsCollineation,[IsProjGrpElWithFrobWithPSIsom],
M: IsCorrelation, InstallMethod(IsCorrelation,[IsProjGrpElWithFrobWithPSIsom],
M: IsCorrelation, InstallMethod(IsCorrelation,[IsProjGrpElWithFrob],
M: IsCorrelation, InstallMethod(IsCorrelation,[IsProjGrpEl],
M: IsProjectivity, [ IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: IsStrictlySemilinear, [ IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: IsProjectivityGroup, InstallMethod(IsProjectivityGroup,[IsProjGroupWithFrobWithPSIsom],
M: IsCollineationGroup, InstallMethod(IsCollineationGroup,[IsProjGroupWithFrobWithPSIsom],
M: ViewObj, [IsStandardDualityOfProjectiveSpace and IsSPMappingByFunctionWithInverseRep],
M: Display, [IsStandardDualityOfProjectiveSpace and IsSPMappingByFunctionWithInverseRep],
M: PrintObj, [IsStandardDualityOfProjectiveSpace and IsSPMappingByFunctionWithInverseRep],
M: \*, [IsStandardDualityOfProjectiveSpace, IsStandardDualityOfProjectiveSpace],
M: \*, [IsIdentityMappingOfElementsOfProjectiveSpace, IsStandardDualityOfProjectiveSpace],
M: \*, [IsStandardDualityOfProjectiveSpace, IsIdentityMappingOfElementsOfProjectiveSpace],
M: \*, [IsIdentityMappingOfElementsOfProjectiveSpace, IsIdentityMappingOfElementsOfProjectiveSpace],
M: \^, [ IsProjectiveSpaceIsomorphism, IsZeroCyc ],
M: \=, [IsStandardDualityOfProjectiveSpace, IsStandardDualityOfProjectiveSpace],
M: \=, [IsStandardDualityOfProjectiveSpace, IsIdentityMappingOfElementsOfProjectiveSpace],
M: \=, [IsIdentityMappingOfElementsOfProjectiveSpace, IsStandardDualityOfProjectiveSpace],
M: \=, [IsIdentityMappingOfElementsOfProjectiveSpace, IsIdentityMappingOfElementsOfProjectiveSpace],
M: ProjElWithFrobWithPSIsom, [IsCMatRep and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsField, IsStandardDualityOfProjectiveSpace],
M: ProjElWithFrobWithPSIsom, [IsMatrix and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsField, IsStandardDualityOfProjectiveSpace],
M: ProjElWithFrobWithPSIsom, [IsCMatRep and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsField],
M: ProjElWithFrobWithPSIsom, [IsMatrix and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsField],
M: ProjElWithFrobWithPSIsom, [IsCMatRep and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsField, IsGeneralMappingand IsSPGeneralMapping and IsOne],
M: ProjElWithFrobWithPSIsom, [IsMatrix and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsField, IsGeneralMappingand IsSPGeneralMapping and IsOne],
M: ViewObj, [IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: Display, [IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: PrintObj, [IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: Representative, [IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: BaseField, [IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: BaseField, [IsProjGroupWithFrobWithPSIsom],
M: \=, [IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep, IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: IsOne, [IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: OneImmutable, [IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: OneImmutable, [IsGroup and IsProjGrpElWithFrobWithPSIsom],
M: OneSameMutability, [IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: \^, [ IsCVecRep and IsFFECollection, IsIdentityMappingOfElementsOfProjectiveSpace ],
M: \^, [ IsVector and IsFFECollection, IsIdentityMappingOfElementsOfProjectiveSpace ],
M: \^, [ IsVector and IsFFECollection and IsGF2VectorRep, IsIdentityMappingOfElementsOfProjectiveSpace ],
M: \^, [ IsVector and IsFFECollection and Is8BitVectorRep, IsIdentityMappingOfElementsOfProjectiveSpace ],
M: \^, [ IsCMatRep and IsFFECollColl, IsStandardDualityOfProjectiveSpace ],
M: \^, [ IsMatrix and IsFFECollColl, IsStandardDualityOfProjectiveSpace ],
M: \^, [ IsCMatRep and IsFFECollColl, IsIdentityMappingOfElementsOfProjectiveSpace ],
M: \^, [ IsMatrix and IsFFECollColl, IsIdentityMappingOfElementsOfProjectiveSpace ],
M: \^, [ IsSubspaceOfProjectiveSpace, IsIdentityMappingOfElementsOfProjectiveSpace ],
M: \^, [ IsSubspaceOfProjectiveSpace, IsStandardDualityOfProjectiveSpace ],
M: \*, [IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep, IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: \&lt;, [IsProjGrpElWithFrobWithPSIsom, IsProjGrpElWithFrobWithPSIsom],
M: InverseSameMutability, [IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: InverseMutable, [IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: \*, [IsProjGrpElWithFrob and IsProjGrpElWithFrobRep, IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep],
M: \*, [IsProjGrpElWithFrobWithPSIsom and IsProjGrpElWithFrobWithPSIsomRep, IsProjGrpElWithFrob and IsProjGrpElWithFrobRep],
M: ProjElsWithFrobWithPSIsom, [IsList, IsField],
M: CorrelationCollineationGroup, [ IsProjectiveSpace and IsProjectiveSpaceRep ],
M: CorrelationOfProjectiveSpace, [ IsMatrix and IsFFECollColl, IsField],
M: CorrelationOfProjectiveSpace, [ IsMatrix and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsField],
M: CorrelationOfProjectiveSpace, [ IsMatrix and IsFFECollColl, IsField, IsStandardDualityOfProjectiveSpace],
M: CorrelationOfProjectiveSpace, [ IsMatrix and IsFFECollColl, IsField, IsIdentityMappingOfElementsOfProjectiveSpace],
M: CorrelationOfProjectiveSpace, [ IsMatrix and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsField, IsStandardDualityOfProjectiveSpace],
M: CorrelationOfProjectiveSpace, [ IsMatrix and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsField, IsIdentityMappingOfElementsOfProjectiveSpace],
M: CorrelationOfProjectiveSpace, [ IsProjectiveSpace, IsMatrix and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsStandardDualityOfProjectiveSpace],
M: CorrelationOfProjectiveSpace, [ IsProjectiveSpace, IsMatrix and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsIdentityMappingOfElementsOfProjectiveSpace],
M: Correlation, [ IsProjectiveSpace, IsMatrix and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsStandardDualityOfProjectiveSpace],
M: Correlation, [ IsProjectiveSpace, IsMatrix and IsFFECollColl, IsRingHomomorphism and IsMultiplicativeElementWithInverse, IsIdentityMappingOfElementsOfProjectiveSpace],
M: MatrixOfCorrelation, InstallMethod(MatrixOfCorrelation,[IsProjGrpElWithFrobWithPSIsomand IsProjGrpElWithFrobWithPSIsomRep],
M: FieldAutomorphism, InstallMethod(FieldAutomorphism,[IsProjGrpElWithFrobWithPSIsomand IsProjGrpElWithFrobWithPSIsomRep],
M: ProjectiveSpaceIsomorphism, InstallMethod(ProjectiveSpaceIsomorphism,[IsProjGrpElWithFrobWithPSIsomand IsProjGrpElWithFrobWithPSIsomRep],
M: Embedding, [IsProjectiveGroupWithFrob, IsProjGroupWithFrobWithPSIsom],
M: Dimension, [IsProjGroupWithFrobWithPSIsom],
M: ActionOnAllPointsHyperplanes, [ IsProjGroupWithFrobWithPSIsom ],
M: CanComputeActionOnPoints, [IsProjGroupWithFrobWithPSIsom],
M: SetAsNiceMono, [IsProjGroupWithFrobWithPSIsom, IsGroupHomomorphism and IsInjective],
M: NiceMonomorphism, [IsProjGroupWithFrobWithPSIsom and CanComputeActionOnPoints and IsHandledByNiceMonomorphism], 50,
M: NiceMonomorphism, [IsProjGroupWithFrobWithPSIsom and IsHandledByNiceMonomorphism], 50,
M: ViewObj, [IsProjGroupWithFrobWithPSIsom],
M: ViewObj, [IsProjGroupWithFrobWithPSIsom and IsTrivial],
M: ViewObj, [IsProjGroupWithFrobWithPSIsom and HasGeneratorsOfGroup],
M: ViewObj, [IsProjGroupWithFrobWithPSIsom and HasSize],
M: ViewObj, [IsProjGroupWithFrobWithPSIsom and HasGeneratorsOfGroup and HasSize],
M: PolarityOfProjectiveSpaceOp, [IsSesquilinearForm and IsFormRep],
M: ViewObj, [IsPolarityOfProjectiveSpace and IsPolarityOfProjectiveSpaceRep],
M: PrintObj, [IsPolarityOfProjectiveSpace and IsPolarityOfProjectiveSpaceRep],
M: Display, [IsPolarityOfProjectiveSpace and IsPolarityOfProjectiveSpaceRep],
M: PolarityOfProjectiveSpace, [IsSesquilinearForm and IsFormRep],
M: PolarityOfProjectiveSpace, [IsMatrix,IsField and IsFinite],
M: PolarityOfProjectiveSpace, [IsMatrix, IsFrobeniusAutomorphism, IsField and IsFinite],
M: HermitianPolarityOfProjectiveSpace, [IsMatrix,IsField and IsFinite],
M: GramMatrix, [IsPolarityOfProjectiveSpace and IsPolarityOfProjectiveSpaceRep],
M: BaseField, [IsPolarityOfProjectiveSpace and IsPolarityOfProjectiveSpaceRep],
M: CompanionAutomorphism, [IsPolarityOfProjectiveSpace and IsPolarityOfProjectiveSpaceRep],
M: SesquilinearForm, [IsPolarityOfProjectiveSpace and IsPolarityOfProjectiveSpaceRep],
M: IsHermitianPolarityOfProjectiveSpace, [IsPolarityOfProjectiveSpace and IsPolarityOfProjectiveSpaceRep],
M: IsOrthogonalPolarityOfProjectiveSpace, [IsPolarityOfProjectiveSpace and IsPolarityOfProjectiveSpaceRep],
M: IsSymplecticPolarityOfProjectiveSpace, [IsPolarityOfProjectiveSpace and IsPolarityOfProjectiveSpaceRep],
M: IsPseudoPolarityOfProjectiveSpace, [IsPolarityOfProjectiveSpace and IsPolarityOfProjectiveSpaceRep],
M: \^, [ IsSubspaceOfProjectiveSpace, IsPolarityOfProjectiveSpace],

polarspace.gi: methods

M: Wrap, [IsClassicalPolarSpace, IsPosInt, IsObject],
M: PolarSpace, [ IsSesquilinearForm, IsField, IsGroup, IsFunction ],
M: PolarSpaceStandard, [ IsSesquilinearForm, IsBool ],
M: PolarSpaceStandard, [ IsQuadraticForm, IsBool ],
M: PolarSpace, [ IsSesquilinearForm ],
M: PolarSpace, [ IsQuadraticForm ],
M: PolarSpace, [ IsHermitianForm ],
M: CanonicalOrbitRepresentativeForSubspaces, [IsString, IsPosInt, IsField],
M: EllipticQuadric, [ IsPosInt, IsField ],
M: EllipticQuadric, [ IsPosInt, IsPosInt ],
M: SymplecticSpace, [ IsPosInt, IsField ],
M: SymplecticSpace, [ IsPosInt, IsPosInt ],
M: ParabolicQuadric, [ IsPosInt, IsField ],
M: ParabolicQuadric, [ IsPosInt, IsPosInt ],
M: HyperbolicQuadric, [ IsPosInt, IsField ],
M: HyperbolicQuadric, [ IsPosInt, IsPosInt ],
M: HermitianPolarSpace, [ IsPosInt, IsField ],
M: HermitianPolarSpace, [ IsPosInt, IsPosInt ],
M: StandardPolarSpace, [ IsClassicalPolarSpace ],
M: IsCanonicalPolarSpace, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep ],
M: CanonicalPolarSpace, [ IsClassicalPolarSpace ],
M: QuadraticForm, [ IsClassicalPolarSpace ],
M: PolarSpaceType, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep ],
M: CompanionAutomorphism, [ IsClassicalPolarSpace ],
M: ViewObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep ],
M: ViewString, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep ],
M: ViewObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsEllipticQuadric],
M: ViewObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsEllipticQuadric and IsStandardPolarSpace],
M: ViewString, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsEllipticQuadric and IsStandardPolarSpace],
M: ViewString, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsEllipticQuadric],
M: ViewObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsSymplecticSpace],
M: ViewObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsSymplecticSpace and IsStandardPolarSpace],
M: ViewString, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsSymplecticSpace and IsStandardPolarSpace],
M: ViewString, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsSymplecticSpace],
M: ViewObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsParabolicQuadric ],
M: ViewObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsParabolicQuadric and IsStandardPolarSpace ],
M: ViewString, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsParabolicQuadric and IsStandardPolarSpace ],
M: ViewString, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsParabolicQuadric ],
M: ViewObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsParabolicQuadric ],
M: ViewObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsHyperbolicQuadric ],
M: ViewObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsHyperbolicQuadric and IsStandardPolarSpace],
M: ViewString, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsHyperbolicQuadric and IsStandardPolarSpace],
M: ViewString, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsHyperbolicQuadric],
M: ViewObj, [IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsHermitianPolarSpace ],
M: ViewObj, [IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsHermitianPolarSpace and IsStandardPolarSpace],
M: ViewString, [IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsHermitianPolarSpace and IsStandardPolarSpace],
M: ViewString, [IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsHermitianPolarSpace],
M: PrintObj, InstallMethod(PrintObj,[IsClassicalPolarSpaceandIsClassicalPolarSpaceRep],
M: Display, InstallMethod(Display,[IsClassicalPolarSpaceandIsClassicalPolarSpaceRep],
M: PrintObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsEllipticQuadric ],
M: Display, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsEllipticQuadric ],
M: PrintObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsSymplecticSpace ],
M: Display, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsSymplecticSpace ],
M: PrintObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsParabolicQuadric ],
M: Display, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsParabolicQuadric ],
M: PrintObj, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsHyperbolicQuadric ],
M: Display, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsHyperbolicQuadric ],
M: PrintObj, [IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsHermitianPolarSpace ],
M: Display, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep and IsHermitianPolarSpace ],
M: IsomorphismCanonicalPolarSpace, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep ],
M: IsomorphismCanonicalPolarSpaceWithIntertwiner, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep ],
M: RankAttr, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep ],
M: TypesOfElementsOfIncidenceStructure, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep ],
M: TypesOfElementsOfIncidenceStructurePlural, [IsClassicalPolarSpace],
M: Order, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep ],
M: RepresentativesOfElements, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep ],
M: QUO, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep, IsSubspaceOfClassicalPolarSpace],
M: Size, [IsSubspacesOfClassicalPolarSpace],
M: VectorSpaceToElement, [IsClassicalPolarSpace, IsCMatRep],
M: VectorSpaceToElement, [IsClassicalPolarSpace, IsCVecRep],
M: VectorSpaceToElement, [IsClassicalPolarSpace, IsPlistRep and IsMatrix],
M: VectorSpaceToElement, [IsClassicalPolarSpace, IsGF2MatrixRep],
M: VectorSpaceToElement, [IsClassicalPolarSpace, Is8BitMatrixRep],
M: VectorSpaceToElement, [IsClassicalPolarSpace, IsRowVector],
M: VectorSpaceToElement, [IsClassicalPolarSpace, Is8BitVectorRep],
M: \in, [IsElementOfIncidenceStructure, IsClassicalPolarSpace],
M: Span, [IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace, IsBool],
M: Meet, [IsSubspaceOfClassicalPolarSpace, IsSubspaceOfClassicalPolarSpace],
M: ElementsOfIncidenceStructure, [IsClassicalPolarSpace and IsClassicalPolarSpaceRep, IsPosInt],
M: ElementsOfIncidenceStructure, [IsClassicalPolarSpace and IsClassicalPolarSpaceRep],
M: NumberOfTotallySingularSubspaces, [IsClassicalPolarSpace, IsPosInt],
M: TypeOfSubspace, [ IsClassicalPolarSpace, IsSubspaceOfProjectiveSpace ],
M: FlagOfIncidenceStructure, [ IsClassicalPolarSpace, IsSubspaceOfProjectiveSpaceCollection ],
M: FlagOfIncidenceStructure, [ IsClassicalPolarSpace, IsList and IsEmpty ],
M: ViewObj, [ IsFlagOfClassicalPolarSpace and IsFlagOfIncidenceStructureRep ],
M: PrintObj, [ IsFlagOfClassicalPolarSpace and IsFlagOfIncidenceStructureRep ],
M: Display, [ IsFlagOfClassicalPolarSpace and IsFlagOfIncidenceStructureRep ],
M: RandomSubspace, [ IsClassicalPolarSpace, IsPosInt ],
M: Random, [ IsSubspacesOfClassicalPolarSpace ],
M: Iterator, [IsSubspacesOfClassicalPolarSpace],
M: ShadowOfElement, [IsClassicalPolarSpace, IsSubspaceOfProjectiveSpace, IsPosInt],
M: Iterator, [ IsShadowSubspacesOfClassicalPolarSpace ],
M: Size, [IsShadowSubspacesOfClassicalPolarSpace andIsShadowSubspacesOfClassicalPolarSpaceRep ],
M: IsCollinear, [IsClassicalPolarSpace and IsClassicalPolarSpaceRep, IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace],
M: PolarityOfProjectiveSpace, [IsClassicalPolarSpace],
M: PolarSpace, [ IsPolarityOfProjectiveSpace ],
M: GeometryOfAbsolutePoints, [ IsPolarityOfProjectiveSpace ],
M: AbsolutePoints, [ IsPolarityOfProjectiveSpace ],
M: AbsolutePoints, [ IsPolarityOfProjectiveSpace ],
M: PolarMap, [IsClassicalPolarSpace],
M: CollineationGroup, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep ],
M: SpecialIsometryGroup, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep ],
M: IsometryGroup, [ IsClassicalPolarSpace and IsClassicalPolarSpaceRep ],
M: SimilarityGroup, InstallMethod(SimilarityGroup,[IsClassicalPolarSpaceandIsClassicalPolarSpaceRep],
M: IsParabolicQuadric, [IsClassicalPolarSpace],
M: IsParabolicQuadric, [IsClassicalPolarSpace],
M: IsHyperbolicQuadric, [IsClassicalPolarSpace],
M: IsHyperbolicQuadric, [IsClassicalPolarSpace],
M: IsEllipticQuadric, [IsClassicalPolarSpace],
M: IsEllipticQuadric, [IsClassicalPolarSpace],
M: IsSymplecticSpace, [IsClassicalPolarSpace],
M: IsHermitianPolarSpace, [IsClassicalPolarSpace],
M: DefiningListOfPolynomials, [IsProjectiveVariety and IsClassicalPolarSpace and IsClassicalPolarSpaceRep],
M: NucleusOfParabolicQuadric, [ IsClassicalPolarSpace ],
M: TangentSpace, [ IsSubspaceOfClassicalPolarSpace ],
M: TangentSpace, [ IsClassicalPolarSpace, IsSubspaceOfProjectiveSpace ],
M: Pole, [ IsClassicalPolarSpace, IsSubspaceOfProjectiveSpace ],
M: IncidenceGraph, [ IsClassicalPolarSpace ],

morphisms.gi: methods

M: GeometryMorphismByFunction, [ IsAnyElementsOfIncidenceStructure, IsAnyElementsOfIncidenceStructure, IsFunction, IsBool, IsFunction ],
M: GeometryMorphismByFunction, [ IsAnyElementsOfIncidenceStructure, IsAnyElementsOfIncidenceStructure, IsFunction, IsFunction ],
M: GeometryMorphismByFunction, [ IsAnyElementsOfIncidenceStructure, IsAnyElementsOfIncidenceStructure, IsFunction ],
M: ViewObj, [ IsGeometryMorphism ],
M: PrintObj, [ IsGeometryMorphism ],
M: Display, [ IsGeometryMorphism ],
M: ViewObj, [ IsGeometryMorphism and IsMappingByFunctionWithInverseRep ],
M: ViewObj, [ IsGeometryMorphism and IsMappingByFunctionRep ],
M: PrintObj, [ IsGeometryMorphism and IsMappingByFunctionRep ],
M: Display, [ IsGeometryMorphism and IsMappingByFunctionRep ],
M: ImageElm, [IsGeometryMorphism, IsElementOfIncidenceStructure],
M: \^, [IsElementOfIncidenceStructure, IsGeometryMorphism],
M: ImagesSet, [IsGeometryMorphism, IsElementOfIncidenceStructureCollection],
M: PreImageElm, [IsGeometryMorphism, IsElementOfIncidenceStructure],
M: PreImagesSet, [IsGeometryMorphism, IsElementOfIncidenceStructureCollection],
M: NaturalEmbeddingBySubspace, [ IsProjectiveSpace, IsProjectiveSpace, IsSubspaceOfProjectiveSpace ],
M: NaturalEmbeddingBySubspaceNC, [ IsProjectiveSpace, IsProjectiveSpace, IsSubspaceOfProjectiveSpace ],
M: NaturalEmbeddingBySubspace, [ IsClassicalPolarSpace, IsClassicalPolarSpace, IsSubspaceOfProjectiveSpace ],
M: NaturalEmbeddingBySubspaceNC, [ IsClassicalPolarSpace, IsClassicalPolarSpace, IsSubspaceOfProjectiveSpace ],
M: IsomorphismPolarSpaces, [ IsClassicalPolarSpace, IsClassicalPolarSpace, IsBool ],
M: IsomorphismPolarSpaces, [ IsClassicalPolarSpace, IsClassicalPolarSpace ],
M: IsomorphismPolarSpacesNC, [ IsClassicalPolarSpace, IsClassicalPolarSpace, IsBool ],
M: IsomorphismPolarSpacesNC, [ IsClassicalPolarSpace, IsClassicalPolarSpace ],
M: ShrinkMat, [ IsBasis, IsMatrix ],
M: ShrinkMat, [ IsField,IsField, IsMatrix ],
M: ShrinkVec, [ IsField, IsField, IsVector ],
M: ShrinkVec, [ IsField, IsField, IsVector, IsBasis ],
M: BlownUpProjectiveSpace, [ IsBasis, IsProjectiveSpace ],
M: BlownUpProjectiveSpaceBySubfield, [ IsField, IsProjectiveSpace ],
M: BlownUpSubspaceOfProjectiveSpace, [ IsBasis, IsSubspaceOfProjectiveSpace ],
M: BlownUpSubspaceOfProjectiveSpaceBySubfield, [ IsField, IsSubspaceOfProjectiveSpace],
M: IsDesarguesianSpreadElement, [ IsBasis, IsSubspaceOfProjectiveSpace ],
M: IsBlownUpSubspaceOfProjectiveSpace, [ IsBasis, IsSubspaceOfProjectiveSpace ],
M: NaturalEmbeddingByFieldReduction, [ IsProjectiveSpace, IsField, IsBasis ],
M: NaturalEmbeddingByFieldReduction, [ IsProjectiveSpace, IsField ],
M: NaturalEmbeddingByFieldReduction, [ IsProjectiveSpace, IsProjectiveSpace, IsBasis ],
M: NaturalEmbeddingByFieldReduction, [ IsProjectiveSpace, IsProjectiveSpace ],
M: BilinearFormFieldReduction, [ IsBilinearForm, IsField, IsFFE, IsBasis ],
M: BilinearFormFieldReduction, [ IsBilinearForm, IsField, IsFFE ],
M: QuadraticFormFieldReduction, [ IsQuadraticForm, IsField, IsFFE, IsBasis ],
M: QuadraticFormFieldReduction, [ IsQuadraticForm, IsField, IsFFE ],
M: HermitianFormFieldReduction, [ IsHermitianForm, IsField, IsFFE, IsBasis ],
M: HermitianFormFieldReduction, [ IsHermitianForm, IsField, IsFFE ],
M: NaturalEmbeddingByFieldReduction, [IsClassicalPolarSpace, IsField, IsFFE, IsBasis, IsBool],
M: NaturalEmbeddingByFieldReduction, [IsClassicalPolarSpace, IsField, IsFFE, IsBasis],
M: NaturalEmbeddingByFieldReduction, [IsClassicalPolarSpace, IsField, IsFFE, IsBool],
M: NaturalEmbeddingByFieldReduction, [IsClassicalPolarSpace, IsField, IsFFE],
M: NaturalEmbeddingByFieldReduction, [IsClassicalPolarSpace, IsField, IsBool],
M: NaturalEmbeddingByFieldReduction, [IsClassicalPolarSpace, IsField],
M: NaturalEmbeddingByFieldReduction, [ IsClassicalPolarSpace, IsClassicalPolarSpace ],
M: NaturalEmbeddingByFieldReduction, [IsClassicalPolarSpace, IsClassicalPolarSpace, IsBool],
M: NaturalEmbeddingByFieldReduction, [IsClassicalPolarSpace, IsClassicalPolarSpace],
M: NaturalEmbeddingBySubfield, [ IsProjectiveSpace, IsProjectiveSpace ],
M: NaturalEmbeddingBySubfield, [ IsClassicalPolarSpace, IsClassicalPolarSpace, IsBool ],
M: NaturalEmbeddingBySubfield, [ IsClassicalPolarSpace, IsClassicalPolarSpace ],
M: NaturalProjectionBySubspace, [ IsProjectiveSpace, IsSubspaceOfProjectiveSpace ],
M: NaturalProjectionBySubspaceNC, [ IsProjectiveSpace, IsSubspaceOfProjectiveSpace ],
M: QUO, [ IsProjectiveSpace and IsProjectiveSpaceRep, IsSubspaceOfProjectiveSpace],
M: NaturalProjectionBySubspace, [ IsClassicalPolarSpace, IsSubspaceOfClassicalPolarSpace ],
M: NaturalProjectionBySubspaceNC, [ IsClassicalPolarSpace, IsSubspaceOfClassicalPolarSpace ],
M: PluckerCoordinates, [ IsMatrix ],
M: InversePluckerCoordinates, [ IsVector ],
M: PluckerCoordinates, [ IsSubspaceOfProjectiveSpace ],
M: KleinCorrespondence, [ IsField, IsBool ],
M: KleinCorrespondence, [ IsPosInt ],
M: KleinCorrespondence, [ IsPosInt, IsBool ],
M: KleinCorrespondence, [ IsField ],
M: KleinCorrespondence, [ IsClassicalPolarSpace, IsBool ],
M: KleinCorrespondence, [ IsClassicalPolarSpace ],
M: KleinCorrespondenceExtended, [ IsField, IsBool ],
M: KleinCorrespondenceExtended, [ IsPosInt ],
M: KleinCorrespondenceExtended, [ IsClassicalPolarSpace, IsBool ],
M: KleinCorrespondenceExtended, [ IsClassicalPolarSpace ],
M: NaturalDualitySymplectic, [ IsClassicalGQ, IsClassicalGQ, IsBool, IsBool ],
M: NaturalDualityHermitian, [ IsClassicalGQ, IsClassicalGQ, IsBool, IsBool ],
M: NaturalDuality, [ IsClassicalGQ, IsClassicalGQ, IsBool ],
M: NaturalDuality, [ IsClassicalGQ, IsClassicalGQ ],
M: NaturalDuality, [ IsClassicalGQ, IsBool ],
M: NaturalDuality, [ IsClassicalGQ ],
M: IsomorphismPolarSpacesProjectionFromNucleus, [ IsClassicalPolarSpace, IsClassicalPolarSpace, IsBool ],
M: SelfDualitySymplectic, [ IsClassicalGQ, IsBool ],
M: SelfDualityParabolic, [ IsClassicalGQ, IsBool ],
M: SelfDuality, [ IsClassicalGQ, IsBool ],
M: SelfDuality, [ IsClassicalGQ ],

enumerators.gi: methods

M: AntonEnumerator, [IsSubspacesOfClassicalPolarSpace],
M: EnumeratorByOrbit, [ IsSubspacesOfClassicalPolarSpace ],
M: AsList, [IsSubspacesOfClassicalPolarSpace],
M: AsSortedList, [IsSubspacesOfClassicalPolarSpace],
M: AsSSortedList, [IsSubspacesOfClassicalPolarSpace],
M: Enumerator, [ IsSubspacesOfClassicalPolarSpace ],
M: Enumerator, [IsShadowSubspacesOfClassicalPolarSpace and IsShadowSubspacesOfClassicalPolarSpaceRep ],

diagram.gi: methods

M: CosetGeometry, InstallMethod(CosetGeometry,"forgroupsandlistofsubgroups",[IsGroup,IsHomogeneousList],
M: Rank2Residues, InstallMethod(Rank2Residues,[IsIncidenceGeometry],
M: MakeRank2Residue, InstallMethod(MakeRank2Residue,[IsRank2Residue],
M: \^, [IsElementOfCosetGeometry, IsMultiplicativeElementWithInverse],
M: \^, [IsFlagOfCosetGeometry, IsMultiplicativeElementWithInverse],
M: FlagOfIncidenceStructure, [ IsCosetGeometry, IsElementOfIncidenceStructureCollection ],
M: FlagOfIncidenceStructure, [ IsCosetGeometry, IsList and IsEmpty ],
M: \=, InstallOtherMethod(\=,[IsCosetGeometry,IsCosetGeometry ],
M: ElementsOfIncidenceStructure, InstallMethod(ElementsOfIncidenceStructure,[IsCosetGeometry,IsPosInt],
M: ElementsOfIncidenceStructure, [IsCosetGeometry],
M: RandomElement, [IsCosetGeometry],
M: RandomChamber, [IsCosetGeometry],
M: RandomFlag, [IsCosetGeometry],
M: Random, [IsAllElementsOfCosetGeometry],
M: Size, InstallMethod(Size,[IsElementsOfCosetGeometry],
M: Wrap, [IsCosetGeometry, IsPosInt, IsObject],
M: Iterator, [IsElementsOfCosetGeometry],
M: IsIncident, [IsElementOfCosetGeometry, IsElementOfCosetGeometry],
M: ParabolicSubgroups, [ IsCosetGeometry ], cg -&gt; cg!.parabolics );
M: AmbientGroup, [ IsCosetGeometry ], cg -&gt; cg!.group );
M: BorelSubgroup, [ IsCosetGeometry ], cg -&gt; Intersection(cg!.parabolics) );
M: IsFlagTransitiveGeometry, [ IsCosetGeometry ],
M: IsFirmGeometry, [ IsCosetGeometry ],
M: IsThinGeometry, [ IsCosetGeometry ],
M: IsThickGeometry, [ IsCosetGeometry ],
M: IsConnected, [ IsCosetGeometry ],
M: IsResiduallyConnected, [ IsCosetGeometry ],
M: StandardFlagOfCosetGeometry, [ IsCosetGeometry ],
M: FlagToStandardFlag, [ IsCosetGeometry, IsFlagOfCosetGeometry ],
M: CanonicalResidueOfFlag, [ IsCosetGeometry, IsFlagOfCosetGeometry ],
M: ResidueOfFlag, [ IsFlagOfCosetGeometry ],
M: IncidenceGraph, InstallMethod(IncidenceGraph,[IsCosetGeometryandIsHandledByNiceMonomorphism],
M: IncidenceGraph, InstallMethod(IncidenceGraph,[IsCosetGeometry],
M: AutGroupIncidenceStructureWithNauty, [ IsCosetGeometry ],
M: CorGroupIncidenceStructureWithNauty, [ IsCosetGeometry ],
M: IsIsomorphicIncidenceStructureWithNauty, [ IsCosetGeometry, IsCosetGeometry ],
M: ViewObj, [ IsDiagram and IsDiagramRep ],
M: ViewObj, [ IsDiagram and IsDiagramRep and HasGeometryOfDiagram],
M: ViewObj, [ IsCosetGeometry and IsCosetGeometryRep ],
M: ViewObj, [ IsFlagOfCosetGeometry ],
M: PrintObj, [ IsFlagOfCosetGeometry ],
M: PrintObj, [ IsCosetGeometry and IsCosetGeometryRep ],
M: ViewObj, [ IsElementsOfCosetGeometry and IsElementsOfCosetGeometryRep ],
M: PrintObj, InstallMethod(PrintObj,"forcosetgeometry",[IsElementsOfCosetGeometryand IsElementsOfCosetGeometryRep ],
M: ViewObj, InstallMethod(ViewObj,"forcosetgeometry",[IsElementOfCosetGeometry],
M: PrintObj, InstallMethod(PrintObj,"forelementofcosetgeometry",[IsElementOfCosetGeometry],
M: ViewObj, InstallMethod(ViewObj,"forvertexofdiagram",[IsVertexOfDiagramandIsVertexOfDiagramRep],
M: PrintObj, InstallMethod(PrintObj,"forvertexofdiagram",[IsVertexOfDiagramandIsVertexOfDiagramRep],
M: ViewObj, InstallMethod(ViewObj,"foredgeofdiagram",[IsEdgeOfDiagramandIsEdgeOfDiagramRep],
M: PrintObj, InstallMethod(PrintObj,"foredgeofdiagram",[IsEdgeOfDiagramandIsEdgeOfDiagramRep],
M: ViewObj, InstallMethod(ViewObj,"forrank2residue",[IsRank2ResidueandIsRank2ResidueRep],
M: PrintObj, InstallMethod(PrintObj,"forrank2residue",[IsRank2ResidueandIsRank2ResidueRep],
M: \=, InstallMethod(\=,[IsVertexOfDiagramandIsVertexOfDiagramRep, IsVertexOfDiagram and IsVertexOfDiagramRep ],
M: \=, InstallMethod(\=,[IsEdgeOfDiagramandIsEdgeOfDiagramRep, IsEdgeOfDiagram and IsEdgeOfDiagramRep ],
M: DiagramOfGeometry, InstallMethod(DiagramOfGeometry,"forflag-transitivecosetgeometry",[IsCosetGeometry],
M: Display, InstallMethod(Display,[IsDiagramandIsDiagramRep],
M: DiagramOfGeometry, InstallMethod(DiagramOfGeometry,"foraprojectivespace",[IsProjectiveSpace],
M: Rk2GeoDiameter, InstallMethod(Rk2GeoDiameter,"foracosetgeometry",[IsCosetGeometry, IsPosInt],
M: Rk2GeoGonality, InstallMethod(Rk2GeoGonality,"foracosetgeometry",[IsCosetGeometry],
M: GeometryOfRank2Residue, InstallMethod(GeometryOfRank2Residue,"forarank2residue",[IsRank2Residue],
M: Rank2Parameters, InstallMethod(Rank2Parameters,"foracosetgeometryofrank2",[IsCosetGeometry],
M: \&lt;, [ IsElementOfCosetGeometry and IsElementOfCosetGeometryRep, IsElementOfCosetGeometry and IsElementOfCosetGeometryRep ],
M: DiagramOfGeometry, InstallMethod(DiagramOfGeometry,[IsClassicalPolarSpace],

varieties.gi: methods

M: AlgebraicVariety, [ IsProjectiveSpace, IsPolynomialRing, IsList ],
M: AlgebraicVariety, [ IsProjectiveSpace, IsList ],
M: AlgebraicVariety, [ IsAffineSpace, IsPolynomialRing, IsList ],
M: AlgebraicVariety, [ IsAffineSpace, IsList ],
M: ProjectiveVariety, [ IsProjectiveSpace, IsPolynomialRing, IsList ],
M: ProjectiveVariety, [ IsProjectiveSpace, IsList ],
M: ViewObj, [ IsProjectiveVariety and IsProjectiveVarietyRep ],
M: PrintObj, [ IsProjectiveVariety and IsProjectiveVarietyRep ],
M: Display, [ IsProjectiveVariety and IsProjectiveVarietyRep ],
M: HermitianVariety, [IsPosInt, IsField],
M: HermitianVariety, [IsPosInt, IsPosInt],
M: HermitianVariety, [IsProjectiveSpace,IsPolynomialRing, IsPolynomial],
M: HermitianVariety, [IsProjectiveSpace, IsPolynomial],
M: ViewObj, [ IsHermitianVariety and IsHermitianVarietyRep ],
M: PrintObj, [ IsHermitianVariety and IsHermitianVarietyRep ],
M: Display, [ IsHermitianVariety and IsHermitianVarietyRep ],
M: QuadraticVariety, [IsProjectiveSpace,IsPolynomialRing, IsPolynomial],
M: QuadraticVariety, [IsProjectiveSpace, IsPolynomial],
M: QuadraticVariety, [IsPosInt, IsField, IsString],
M: QuadraticVariety, [IsPosInt, IsField],
M: QuadraticVariety, [IsPosInt, IsPosInt],
M: QuadraticVariety, [IsPosInt, IsPosInt, IsString],
M: ViewObj, [ IsQuadraticVariety and IsQuadraticVarietyRep ],
M: PrintObj, [ IsQuadraticVariety and IsQuadraticVarietyRep ],
M: Display, [ IsQuadraticVariety and IsQuadraticVarietyRep ],
M: PolarSpace, [IsProjectiveVariety and IsProjectiveVarietyRep],
M: AffineVariety, [ IsAffineSpace, IsPolynomialRing, IsList ],
M: AffineVariety, [ IsAffineSpace, IsList ],
M: AlgebraicVariety, [ IsAffineSpace, IsList ],
M: ViewObj, [ IsAffineVariety and IsAffineVarietyRep ],
M: PrintObj, [ IsAffineVariety and IsAffineVarietyRep ],
M: Display, [ IsAffineVariety and IsAffineVarietyRep ],
M: \in, [IsElementOfIncidenceStructure, IsAlgebraicVariety],
M: PointsOfAlgebraicVariety, [IsAlgebraicVariety and IsAlgebraicVarietyRep],
M: ViewObj, [ IsPointsOfAlgebraicVariety and IsPointsOfAlgebraicVarietyRep ],
M: PrintObj, [ IsPointsOfAlgebraicVariety and IsPointsOfAlgebraicVarietyRep ],
M: Points, [IsAlgebraicVariety and IsAlgebraicVarietyRep],
M: \in, [IsElementOfIncidenceStructure, IsPointsOfAlgebraicVariety], 1*SUM_FLAGS+3,
M: Iterator, [IsPointsOfAlgebraicVariety],
M: Enumerator, [IsPointsOfAlgebraicVariety],
M: AmbientSpace, [IsAlgebraicVariety and IsAlgebraicVarietyRep],
M: SegreMap, [ IsHomogeneousList ],
M: SegreMap, [IsHomogeneousList, IsField ],
M: SegreMap, [IsProjectiveSpace, IsProjectiveSpace ],
M: SegreMap, [ IsPosInt, IsPosInt, IsField ],
M: SegreMap, [ IsPosInt, IsPosInt, IsPosInt ],
M: Source, [ IsSegreMap ],
M: ViewObj, [ IsSegreMap and IsSegreMapRep ],
M: PrintObj, [ IsSegreMap and IsSegreMapRep ],
M: SegreVariety, [IsHomogeneousList],
M: SegreVariety, [IsHomogeneousList, IsField ],
M: SegreVariety, [IsProjectiveSpace, IsProjectiveSpace ],
M: SegreVariety, [ IsPosInt, IsPosInt, IsField ],
M: SegreVariety, [ IsPosInt, IsPosInt, IsPosInt ],
M: ViewObj, [ IsSegreVariety and IsSegreVarietyRep ],
M: PrintObj, [ IsSegreVariety and IsSegreVarietyRep ],
M: SegreMap, [IsSegreVariety],
M: PointsOfSegreVariety, [IsSegreVariety and IsSegreVarietyRep],
M: ViewObj, [ IsPointsOfSegreVariety and IsPointsOfSegreVarietyRep ],
M: Points, [IsSegreVariety and IsSegreVarietyRep],
M: Iterator, [IsPointsOfSegreVariety],
M: Enumerator, [IsPointsOfSegreVariety],
M: Size, [IsPointsOfSegreVariety],
M: ImageElm, [IsSegreMap, IsList],
M: \^, [IsList, IsSegreMap],
M: ImagesSet, [IsSegreMap, IsList],
M: VeroneseMap, [IsProjectiveSpace],
M: ViewObj, [ IsVeroneseMap and IsVeroneseMapRep ],
M: PrintObj, [ IsVeroneseMap and IsVeroneseMapRep ],
M: VeroneseVariety, [IsProjectiveSpace],
M: VeroneseVariety, [ IsPosInt, IsField ],
M: VeroneseVariety, [ IsPosInt, IsPosInt ],
M: ViewObj, [ IsVeroneseVariety and IsVeroneseVarietyRep ],
M: PrintObj, [ IsVeroneseVariety and IsVeroneseVarietyRep ],
M: VeroneseMap, [IsVeroneseVariety],
M: PointsOfVeroneseVariety, [IsVeroneseVariety and IsVeroneseVarietyRep],
M: ViewObj, [ IsPointsOfVeroneseVariety and IsPointsOfVeroneseVarietyRep ],
M: Points, [IsVeroneseVariety and IsVeroneseVarietyRep],
M: Iterator, [IsPointsOfVeroneseVariety],
M: Enumerator, [IsPointsOfVeroneseVariety],
M: Size, [IsPointsOfVeroneseVariety],
M: ImageElm, [IsGeometryMap, IsElementOfIncidenceStructure],
M: \^, [IsElementOfIncidenceStructure, IsGeometryMap],
M: ImagesSet, [IsGeometryMap, IsElementOfIncidenceStructureCollection],
M: Source, [ IsGeometryMap ],
M: Range, [ IsGeometryMap ],
M: GrassmannCoordinates, [ IsSubspaceOfProjectiveSpace ],
M: GrassmannMap, [ IsPosInt, IsProjectiveSpace ],
M: GrassmannMap, [ IsPosInt, IsPosInt, IsPosInt ],
M: GrassmannMap, [ IsSubspacesOfProjectiveSpace ],
M: ViewObj, [ IsGrassmannMap and IsGrassmannMapRep ],
M: PrintObj, [ IsGrassmannMap and IsGrassmannMapRep ],
M: GrassmannVariety, [ IsPosInt, IsProjectiveSpace ],
M: GrassmannVariety, [ IsSubspacesOfProjectiveSpace ],
M: ViewObj, [ IsGrassmannVariety and IsGrassmannVarietyRep ],
M: PrintObj, [ IsGrassmannVariety and IsGrassmannVarietyRep ],
M: GrassmannMap, [IsGrassmannVariety],
M: PointsOfGrassmannVariety, [IsGrassmannVariety and IsGrassmannVarietyRep],
M: ViewObj, [ IsPointsOfGrassmannVariety and IsPointsOfGrassmannVarietyRep ],
M: Points, [IsGrassmannVariety and IsGrassmannVarietyRep],
M: Iterator, [IsPointsOfGrassmannVariety],
M: Enumerator, [IsPointsOfGrassmannVariety],
M: Size, [IsPointsOfGrassmannVariety],

affinespace.gi: methods

M: AffineSpace, [ IsPosInt, IsField ],
M: AffineSpace, [ IsPosInt, IsPosInt ],
M: ViewObj, InstallMethod(ViewObj,[IsAffineSpaceandIsAffineSpaceRep],
M: PrintObj, InstallMethod(PrintObj,[IsAffineSpaceandIsAffineSpaceRep],
M: \=, [IsAffineSpace, IsAffineSpace],
M: Dimension, [ IsAffineSpace and IsAffineSpaceRep ],
M: UnderlyingVectorSpace, [ IsAffineSpace and IsAffineSpaceRep ],
M: AmbientSpace, [IsSubspaceOfAffineSpace],
M: BaseField, [IsAffineSpace and IsAffineSpaceRep],
M: BaseField, [IsSubspaceOfAffineSpace],
M: TypesOfElementsOfIncidenceStructure, [IsAffineSpace],
M: TypesOfElementsOfIncidenceStructurePlural, [IsAffineSpace],
M: VectorSpaceTransversalElement, [IsVectorSpace, IsFFECollColl, IsVector],
M: VectorSpaceTransversal, [IsVectorSpace, IsFFECollColl],
M: ViewObj, [ IsVectorSpaceTransversal and IsVectorSpaceTransversalRep ],
M: PrintObj, [ IsVectorSpaceTransversal and IsVectorSpaceTransversalRep ],
M: Wrap, [IsAffineSpace, IsPosInt, IsObject],
M: ViewObj, [ IsSubspacesOfAffineSpace and IsSubspacesOfAffineSpaceRep ],
M: PrintObj, [ IsSubspacesOfAffineSpace and IsAllSubspacesOfProjectiveSpaceRep ],
M: Display, [ IsSubspaceOfAffineSpace ],
M: AffineSubspace, [IsAffineSpace, IsRowVector, IsPlistRep and IsMatrix],
M: AffineSubspace, [IsAffineSpace, IsRowVector],
M: AffineSubspace, [IsAffineSpace, IsCVecRep],
M: AffineSubspace, [IsAffineSpace, IsRowVector, Is8BitMatrixRep],
M: AffineSubspace, [IsAffineSpace, IsRowVector, IsGF2MatrixRep],
M: AffineSubspace, [IsAffineSpace, IsCVecRep, IsCMatRep],
M: ObjectToElement, [ IsAffineSpace, IsList],
M: ObjectToElement, [ IsAffineSpace, IsPosInt, IsList],
M: RandomSubspace, [ IsAffineSpace, IsInt ],
M: Random, [ IsSubspacesOfAffineSpace ],
M: ElementsOfIncidenceStructure, [IsAffineSpace],
M: ElementsOfIncidenceStructure, [ IsAffineSpace, IsPosInt],
M: Points, [IsAffineSpace],
M: Lines, [IsAffineSpace],
M: Planes, [IsAffineSpace],
M: Solids, [IsAffineSpace],
M: Hyperplanes, [IsAffineSpace],
M: Size, [IsSubspacesOfAffineSpace],
M: FlagOfIncidenceStructure, [ IsAffineSpace, IsSubspaceOfAffineSpaceCollection ],
M: FlagOfIncidenceStructure, [ IsAffineSpace, IsList and IsEmpty ],
M: ViewObj, [ IsFlagOfAffineSpace and IsFlagOfIncidenceStructureRep ],
M: PrintObj, [ IsFlagOfAffineSpace and IsFlagOfIncidenceStructureRep ],
M: Display, [ IsFlagOfAffineSpace and IsFlagOfIncidenceStructureRep ],
M: Enumerator, [ IsVectorSpaceTransversal ],
M: Enumerator, [ IsSubspacesOfAffineSpace ],
M: Iterator, [IsSubspacesOfAffineSpace],
M: \in, [IsSubspaceOfAffineSpace, IsAffineSpace],
M: \in, [ IsAffineSpace, IsSubspaceOfAffineSpace ],
M: \in, [IsSubspaceOfAffineSpace, IsSubspaceOfAffineSpace],
M: IsIncident, [IsSubspaceOfAffineSpace, IsSubspaceOfAffineSpace],
M: Span, [IsSubspaceOfAffineSpace, IsSubspaceOfAffineSpace],
M: Meet, [IsSubspaceOfAffineSpace, IsSubspaceOfAffineSpace],
M: IsParallel, [ IsSubspaceOfAffineSpace, IsSubspaceOfAffineSpace ],
M: ProjectiveCompletion, [ IsAffineSpace ],
M: ShadowOfElement, [IsAffineSpace, IsSubspaceOfAffineSpace, IsPosInt],
M: ShadowOfFlag, [IsAffineSpace, IsFlagOfIncidenceStructure, IsPosInt],
M: ParallelClass, [IsAffineSpace, IsSubspaceOfAffineSpace],
M: ParallelClass, [ IsSubspaceOfAffineSpace ],
M: Iterator, [IsParallelClassOfAffineSpace and IsParallelClassOfAffineSpaceRep ],
M: Size, [IsShadowSubspacesOfAffineSpace and IsShadowSubspacesOfAffineSpaceRep ],
M: Iterator, [IsShadowSubspacesOfAffineSpace and IsShadowSubspacesOfAffineSpaceRep ],
M: ViewObj, [ IsShadowSubspacesOfAffineSpace and IsShadowSubspacesOfAffineSpaceRep ],
M: ViewObj, [ IsParallelClassOfAffineSpace and IsParallelClassOfAffineSpaceRep ],
M: Points, InstallMethod(Points,[IsSubspaceOfAffineSpace],
M: Points, InstallMethod(Points,[IsAffineSpace,IsSubspaceOfAffineSpace],
M: Lines, InstallMethod(Lines,[IsSubspaceOfAffineSpace],
M: Lines, InstallMethod(Lines,[IsAffineSpace,IsSubspaceOfAffineSpace],
M: Planes, InstallMethod(Planes,[IsSubspaceOfAffineSpace],
M: Planes, InstallMethod(Planes,[IsAffineSpace,IsSubspaceOfAffineSpace],
M: Solids, InstallMethod(Solids,[IsSubspaceOfAffineSpace],
M: Solids, InstallMethod(Solids,[IsAffineSpace,IsSubspaceOfAffineSpace],
M: IncidenceGraph, [ IsAffineSpace ],

affinegroup.gi: methods

M: AffineGroup, [ IsAffineSpace ],
M: CollineationGroup, [ IsAffineSpace ],
M: \^, [IsSubspaceOfAffineSpace, IsProjGrpElWithFrob],

gpolygons.gi: methods

M: GeneralisedPolygonByBlocks, [ IsHomogeneousList ],
M: GeneralisedPolygonByIncidenceMatrix, [ IsMatrix ],
M: GeneralisedPolygonByElements, [ IsSet, IsSet, IsFunction ],
M: GeneralisedPolygonByElements, [ IsSet, IsSet, IsFunction, IsGroup, IsFunction ],
M: ViewObj, [ IsProjectivePlaneCategory and IsGeneralisedPolygonRep],
M: ViewObj, [ IsGeneralisedQuadrangle and IsGeneralisedPolygonRep],
M: ViewObj, [ IsGeneralisedHexagon and IsGeneralisedPolygonRep],
M: ViewObj, [ IsGeneralisedOctagon and IsGeneralisedPolygonRep],
M: ViewObj, [ IsGeneralisedPolygon and IsGeneralisedPolygonRep],
M: ViewObj, [ IsWeakGeneralisedPolygon and IsGeneralisedPolygonRep],
M: Order, [ IsWeakGeneralisedPolygon ],
M: UnderlyingObject, [ IsElementOfGeneralisedPolygon ],
M: ObjectToElement, [ IsGeneralisedPolygon and IsGeneralisedPolygonRep, IsPosInt, IsObject],
M: ObjectToElement, [ IsGeneralisedPolygon and IsGeneralisedPolygonRep, IsObject],
M: ElementsOfIncidenceStructure, [IsGeneralisedPolygon and IsGeneralisedPolygonRep, IsPosInt],
M: ElementsOfIncidenceStructure, [IsWeakGeneralisedPolygon and IsGeneralisedPolygonRep, IsPosInt],
M: Points, [IsGeneralisedPolygon and IsGeneralisedPolygonRep],
M: Lines, [IsGeneralisedPolygon and IsGeneralisedPolygonRep],
M: ViewObj, [ IsElementsOfGeneralisedPolygon and IsElementsOfGeneralisedPolygonRep ],
M: PrintObj, [ IsElementsOfGeneralisedPolygon and IsElementsOfGeneralisedPolygonRep ],
M: Size, [IsElementsOfGeneralisedPolygon],
M: Iterator, [ IsElementsOfGeneralisedPolygon and IsElementsOfGeneralisedPolygonRep],
M: Iterator, [IsShadowElementsOfGeneralisedPolygon and IsShadowElementsOfGeneralisedPolygonRep ],
M: Random, [ IsElementsOfGeneralisedPolygon and IsElementsOfGeneralisedPolygonRep ],
M: IsIncident, [IsElementOfGeneralisedPolygon, IsElementOfGeneralisedPolygon],
M: Span, [ IsElementOfGeneralisedPolygon, IsElementOfGeneralisedPolygon ],
M: Meet, [ IsElementOfGeneralisedPolygon, IsElementOfGeneralisedPolygon ],
M: Wrap, [IsGeneralisedPolygon, IsPosInt, IsObject],
M: TypesOfElementsOfIncidenceStructurePlural, [ IsGeneralisedPolygon and IsGeneralisedPolygonRep ],
M: ShadowOfElement, [IsGeneralisedPolygon and IsGeneralisedPolygonRep, IsElementOfGeneralisedPolygon, IsPosInt],
M: ViewObj, [ IsShadowElementsOfGeneralisedPolygon and IsShadowElementsOfGeneralisedPolygonRep ],
M: Points, [ IsElementOfGeneralisedPolygon ],
M: Lines, [ IsElementOfGeneralisedPolygon ],
M: DistanceBetweenElements, [ IsElementOfGeneralisedPolygon, IsElementOfGeneralisedPolygon],
M: IncidenceGraph, [ IsGeneralisedPolygon ],
M: IncidenceMatrixOfGeneralisedPolygon, [ IsGeneralisedPolygon ],
M: CollineationGroup, [ IsGeneralisedPolygon and IsGeneralisedPolygonRep ],
M: BlockDesignOfGeneralisedPolygon, [ IsGeneralisedPolygon and IsGeneralisedPolygonRep ],
M: DistanceBetweenElements, [ IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace ],
M: IncidenceGraph, [ IsDesarguesianPlane ],
M: DistanceBetweenElements, [ IsSubspaceOfClassicalPolarSpace, IsSubspaceOfClassicalPolarSpace ],
M: IncidenceGraph, [ IsClassicalGQ ],
M: Wrap, [IsClassicalGeneralisedHexagon, IsPosInt, IsObject],
M: SplitCayleyHexagon, [ IsField and IsFinite ],
M: SplitCayleyHexagon, [ IsPosInt ],
M: SplitCayleyHexagon, [ IsClassicalPolarSpace ],
M: TwistedTrialityHexagon, [ IsField and IsFinite ],
M: TwistedTrialityHexagon, [ IsPosInt ],
M: TwistedTrialityHexagon, [ IsClassicalPolarSpace ],
M: Display, [ IsGeneralisedHexagon and IsLieGeometry ],
M: G2fining, [ IsPosInt, IsField and IsFinite ],
M: 3D4fining, [ IsField and IsFinite ],
M: CollineationGroup, [ IsClassicalGeneralisedHexagon],
M: IncidenceGraph, [ IsClassicalGeneralisedHexagon and IsGeneralisedPolygonRep ],
M: VectorSpaceToElement, [ IsClassicalGeneralisedHexagon, IsCVecRep],
M: VectorSpaceToElement, [ IsClassicalGeneralisedHexagon, IsRowVector ],
M: VectorSpaceToElement, [ IsClassicalGeneralisedHexagon, Is8BitVectorRep ],
M: VectorSpaceToElement, [ IsClassicalGeneralisedHexagon, IsPlistRep and IsMatrix],
M: VectorSpaceToElement, [ IsClassicalGeneralisedHexagon, IsGF2MatrixRep],
M: VectorSpaceToElement, [ IsClassicalGeneralisedHexagon, Is8BitMatrixRep],
M: VectorSpaceToElement, [ IsClassicalGeneralisedHexagon, IsCMatRep],
M: \in, [ IsElementOfIncidenceStructure, IsClassicalGeneralisedHexagon ],
M: ObjectToElement, [ IsClassicalGeneralisedHexagon, IsObject],
M: ViewObj, [ IsElementOfKantorFamily ],
M: PrintObj, [ IsElementOfKantorFamily ],
M: Wrap, [IsElationGQByKantorFamily, IsPosInt, IsPosInt, IsObject],
M: \=, [IsElementOfKantorFamily, IsElementOfKantorFamily],
M: \&lt;, [IsElementOfKantorFamily, IsElementOfKantorFamily],
M: IsKantorFamily, [IsGroup, IsList, IsList],
M: EGQByKantorFamily, [IsGroup, IsList, IsList],
M: Display, [ IsElationGQByKantorFamily ],
M: UnderlyingObject, [ IsElementOfKantorFamily ],
M: ObjectToElement, [ IsElationGQByKantorFamily, IsPosInt, IsRightCoset ],
M: ObjectToElement, [ IsElationGQByKantorFamily, IsRightCoset ],
M: ObjectToElement, [ IsElationGQByKantorFamily, IsPosInt, IsMultiplicativeElementWithInverse ],
M: ObjectToElement, [ IsElationGQByKantorFamily, IsMultiplicativeElementWithInverse ],
M: ObjectToElement, [ IsElationGQByKantorFamily, IsPosInt, IsMagmaWithInverses ],
M: ObjectToElement, [ IsElationGQByKantorFamily, IsMagmaWithInverses ],
M: IsAnisotropic, [IsFFECollColl, IsField and IsFinite],
M: IsqClan, [ IsFFECollCollColl, IsField and IsFinite],
M: qClan, [ IsFFECollCollColl, IsField ],
M: ViewObj, [ IsqClanObj and IsqClanRep ],
M: PrintObj, [ IsqClanObj and IsqClanRep ],
M: AsList, [IsqClanObj and IsqClanRep],
M: AsSet, [IsqClanObj and IsqClanRep],
M: BaseField, [IsqClanObj and IsqClanRep],
M: IsLinearqClan, [ IsqClanObj ],
M: LinearqClan, [ IsPosInt ],
M: FisherThasWalkerKantorBettenqClan, [ IsPosInt ],
M: KantorMonomialqClan, [ IsPosInt ],
M: KantorKnuthqClan, [ IsPosInt ],
M: FisherqClan, [ IsPosInt ],
M: KantorFamilyByqClan, [ IsqClanObj and IsqClanRep ],
M: EGQByqClan, [ IsqClanObj and IsqClanRep ],
M: IncidenceGraph, [ IsElationGQ and IsGeneralisedPolygonRep ],
M: BLTSetByqClan, [ IsqClanObj and IsqClanRep ],
M: EGQByBLTSet, [IsList, IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace],
M: EGQByBLTSet, [ IsList ],
M: Display, [ IsElationGQByBLTSet ],
M: DefiningPlanesOfEGQByBLTSet, [ IsElationGQByBLTSet ],
M: ObjectToElement, [ IsElationGQByBLTSet, IsPosInt, IsSubspaceOfClassicalPolarSpace],
M: ObjectToElement, [ IsElationGQByBLTSet, IsSubspaceOfClassicalPolarSpace],
M: CollineationSubgroup, [ IsElationGQByBLTSet ],
M: FlockGQByqClan, InstallMethod(FlockGQByqClan,[IsqClanObj],

orbits-stabilisers.gi: methods

M: FiningOrbit, [ IsProjectiveGroupWithFrob, IsElementOfIncidenceStructure, IsFunction],
M: FiningOrbit, [ IsProjectiveGroupWithFrob, IsSubspaceOfProjectiveSpace ],
M: FiningOrbit, [ IsProjectiveGroupWithFrob, IsSubspaceOfAffineSpace ],
M: FiningOrbit, [ IsProjectiveGroupWithFrob, CategoryCollections(IsElementOfIncidenceStructure), IsFunction],
M: FiningOrbit, [ IsProjectiveGroupWithFrob, CategoryCollections(IsElementOfIncidenceStructure) ],
M: FiningOrbits, [ IsGroup, IsHomogeneousList, IsFunction],
M: FiningOrbitsDomain, [ IsGroup, IsElementsOfIncidenceGeometry, IsFunction ],
M: FiningOrbits, [ IsProjectiveGroupWithFrob, IsSubspaceOfProjectiveSpaceCollection and IsHomogeneousList ],
M: FiningOrbits, [ IsProjectiveGroupWithFrob, IsSubspaceOfAffineSpaceCollection and IsHomogeneousList ],
M: FiningOrbits, [ IsProjectiveGroupWithFrob, IsSubspacesOfProjectiveSpace ],
M: FiningOrbits, [ IsProjectiveGroupWithFrob, IsSubspacesOfAffineSpace ],
M: FiningOrbits, [ IsProjectiveGroupWithFrob, IsShadowSubspacesOfProjectiveSpace],
M: FiningOrbits, [ IsProjectiveGroupWithFrob, IsShadowSubspacesOfAffineSpace],
M: FiningOrbits, [ IsProjectiveGroupWithFrob, IsShadowSubspacesOfClassicalPolarSpace],
M: FiningOrbits, [ IsProjectiveGroupWithFrob, IsParallelClassOfAffineSpace],
M: FiningElementStabiliserOp, [ IsGroup, IsElementOfIncidenceStructure, IsFunction],
M: FiningStabiliser, [ IsProjectiveGroupWithFrob, IsSubspaceOfProjectiveSpace],
M: FiningStabiliser, [ IsProjectiveGroupWithFrob, IsSubspaceOfAffineSpace],
M: FiningStabiliserOrb, [IsProjectiveGroupWithFrob, IsSubspaceOfProjectiveSpace],
M: FiningStabiliserOrb, [IsProjectiveGroupWithFrob, IsSubspaceOfAffineSpace],
M: FiningSetwiseStabiliser, [IsProjectiveGroupWithFrob, IsSubspaceOfProjectiveSpaceCollection and IsHomogeneousList],
M: FiningSetwiseStabiliser, [IsProjectiveGroupWithFrob, IsSubspaceOfAffineSpaceCollection and IsHomogeneousList],
M: FiningStabiliserPerm, InstallMethod(FiningStabiliserPerm,[IsProjectiveGroupWithFrob,IsElementOfIncidenceStructure],
M: FiningStabiliserPerm2, [IsProjectiveGroupWithFrob, IsElementOfIncidenceStructure],
M: FixedSubspaces, [IsProjectiveGroupWithFrob, IsProjectiveSpace],
M: ProjectiveStabiliserGroupOfSubspace, [IsSubspaceOfProjectiveSpace],
M: StabiliserGroupOfSubspace, [IsSubspaceOfProjectiveSpace],
M: SpecialProjectiveStabiliserGroupOfSubspace, [IsSubspaceOfProjectiveSpace],

