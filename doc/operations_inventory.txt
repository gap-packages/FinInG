Operations

geometry.gd: operations

O: IncidenceStructure: [IsList, IsFunction, IsFunction, IsList]
O: ResidueOfFlag: [IsFlagOfIncidenceStructure]
O: ElementsOfIncidenceStructure: [IsIncidenceStructure]
O: ElementsOfIncidenceStructure: [IsIncidenceStructure, IsPosInt]
O: ElementsOfIncidenceStructure: [IsIncidenceStructure, IsString]
O: NrElementsOfIncidenceStructure: [IsIncidenceStructure, IsPosInt]
O: NrElementsOfIncidenceStructure: [IsIncidenceStructure, IsString]
O: IncidenceGraph: [IsIncidenceStructure]
O: Points: [IsIncidenceStructure]
O: Lines: [IsIncidenceStructure]
O: Planes: [IsIncidenceStructure]
O: Solids: [IsIncidenceStructure]
O: FlagOfIncidenceStructure: [IsIncidenceStructure, IsElementOfIncidenceStructureCollection]
O: FlagOfIncidenceStructure: [IsIncidenceStructure, IsListandIsEmpty]
O: ChamberOfIncidenceStructure: [IsElementOfIncidenceStructureCollection]
O: ElementsOfFlag: [IsFlagOfIncidenceStructure]
O: IsIncident: [IsElementOfIncidenceStructure, IsElementOfIncidenceStructure]
O: IsIncident: [IsElementOfIncidenceStructure, IsFlagOfIncidenceStructure]
O: IsIncident: [IsFlagOfIncidenceStructure, IsElementOfIncidenceStructure]
O: ShadowOfElement: [IsElementOfIncidenceStructure, IsPosInt]
O: IsCollinear: [IsIncidenceStructure, IsElementOfIncidenceStructure, IsElementOfIncidenceStructure]
O: Span: [IsElementOfIncidenceStructure, IsElementOfIncidenceStructure]
O: Meet: [IsElementOfIncidenceStructure, IsElementOfIncidenceStructure]
O: Type: [IsElementOfIncidenceStructureandIsElementOfIncidenceStructureRep]
O: Type: [IsElementsOfIncidenceStructureandIsElementsOfIncidenceStructureRep]
O: Type: [IsFlagOfIncidenceStructureandIsFlagOfIncidenceStructureRep]
O: Wrap: [IsIncidenceStructure, IsPosInt, IsObject]
O: Unwrap: [IsElementOfIncidenceStructure]
O: ObjectToElement: [IsIncidenceStructure, IsPosInt, IsObject]
O: ObjectToElement: [IsIncidenceStructure, IsObject]
O: UnderlyingObject: [IsElementOfIncidenceStructure]
O: ShadowOfElement: [IsIncidenceStructure, IsElementOfIncidenceStructure, IsPosInt]
O: ShadowOfElement: [IsIncidenceStructure, IsElementOfIncidenceStructure, IsString]
O: ShadowOfFlag: [IsIncidenceStructure, IsFlagOfIncidenceStructure, IsPosInt]
O: ShadowOfFlag: [IsIncidenceStructure, IsFlagOfIncidenceStructure, IsString]
O: ShadowOfFlag: [IsIncidenceStructure, IsList, IsPosInt]
O: ShadowOfFlag: [IsIncidenceStructure, IsList, IsString]
O: ElementsIncidentWithElementOfIncidenceStructure: [IsElementOfIncidenceStructure, IsPosInt]
O: Points: [IsElementOfIncidenceStructure]
O: Lines: [IsElementOfIncidenceStructure]
O: Planes: [IsElementOfIncidenceStructure]
O: Solids: [IsElementOfIncidenceStructure]
O: Hyperplanes: [IsElementOfIncidenceStructure]
O: Points: [IsIncidenceStructure, IsElementOfIncidenceStructure]
O: Lines: [IsIncidenceStructure, IsElementOfIncidenceStructure]
O: Planes: [IsIncidenceStructure, IsElementOfIncidenceStructure]
O: Solids: [IsIncidenceStructure, IsElementOfIncidenceStructure]
O: Hyperplanes: [IsIncidenceStructure, IsElementOfIncidenceStructure]

liegeometry.gd: operations

O: UnderlyingVectorSpace: [IsLieGeometry]
O: UnderlyingVectorSpace: [IsElementOfLieGeometry]
O: UnderlyingVectorSpace: [IsFlagOfLieGeometry]
O: VectorSpaceToElement: [IsLieGeometry, IsRowVector]
O: VectorSpaceToElement: [IsLieGeometry, Is8BitVectorRep]
O: VectorSpaceToElement: [IsLieGeometry, IsPlistRep]
O: VectorSpaceToElement: [IsLieGeometry, Is8BitMatrixRep]
O: VectorSpaceToElement: [IsLieGeometry, IsGF2MatrixRep]
O: VectorSpaceToElement: [IsLieGeometry, IsCVecRep]
O: VectorSpaceToElement: [IsLieGeometry, IsCMatRep]
O: EmptySubspace: [IsLieGeometry]
O: RandomSubspace: [IsVectorSpace, IsInt]
O: IsIncident: [IsEmptySubspace, IsElementOfLieGeometry]
O: IsIncident: [IsElementOfLieGeometry, IsEmptySubspace]
O: IsIncident: [IsEmptySubspace, IsLieGeometry]
O: IsIncident: [IsLieGeometry, IsEmptySubspace]
O: IsIncident: [IsEmptySubspace, IsEmptySubspace]
O: Span: [IsEmptySubspace, IsElementOfLieGeometry]
O: Span: [IsElementOfLieGeometry, IsEmptySubspace]
O: Span: [IsEmptySubspace, IsLieGeometry]
O: Span: [IsLieGeometry, IsEmptySubspace]
O: Span: [IsEmptySubspace, IsEmptySubspace]
O: Span: [IsList]
O: Meet: [IsEmptySubspace, IsElementOfLieGeometry]
O: Meet: [IsElementOfLieGeometry, IsEmptySubspace]
O: Meet: [IsEmptySubspace, IsLieGeometry]
O: Meet: [IsLieGeometry, IsEmptySubspace]
O: Meet: [IsEmptySubspace, IsEmptySubspace]
O: ElementToElement: [IsLieGeometry, IsElementOfLieGeometry]
O: ConvertElement: [IsLieGeometry, IsElementOfLieGeometry]
O: ConvertElementNC: [IsLieGeometry, IsElementOfLieGeometry]

group.gd: operations

O: FindBasePointCandidates: [IsGroup, IsRecord, IsInt]
O: FindBasePointCandidates: [IsGroup, IsRecord, IsInt, IsObject]
O: ProjEl: [IsMatrixandIsFFECollColl]
O: ProjEls: [IsList]
O: Projectivity: [IsList, IsField]
O: Projectivity: [IsProjectiveSpace, IsMatrix]
O: ProjElWithFrob: [IsMatrixandIsFFECollColl, IsMapping]
O: ProjElWithFrob: [IsMatrixandIsFFECollColl, IsMapping, IsField]
O: ProjElsWithFrob: [IsList]
O: ProjElsWithFrob: [IsList, IsField]
O: CollineationOfProjectiveSpace: [IsList, IsField]
O: CollineationOfProjectiveSpace: [IsList, IsMapping, IsField]
O: CollineationOfProjectiveSpace: [IsProjectiveSpace, IsMatrix]
O: CollineationOfProjectiveSpace: [IsProjectiveSpace, IsMatrix, IsMapping]
O: CollineationOfProjectiveSpace: [IsProjectiveSpace, IsMapping]
O: Collineation: [IsProjectiveSpace, IsMatrix]
O: Collineation: [IsProjectiveSpace, IsMatrix, IsMapping]
O: ProjectiveSemilinearMap: [IsList, IsMapping, IsField]
O: ProjectivityByImageOfStandardFrameNC: [IsProjectiveSpace, IsList]
O: MatrixOfCollineation: [IsProjGrpElWithFrobandIsProjGrpElWithFrobRep]
O: MatrixOfCollineation: [IsProjGrpElandIsProjGrpElRep]
O: FieldAutomorphism: [IsProjGrpElWithFrobandIsProjGrpElWithFrobRep]
O: ActionOnAllProjPoints: [IsProjectiveGroupWithFrob]
O: SetAsNiceMono: [IsProjectiveGroupWithFrob, IsGroupHomomorphism]
O: CanonicalGramMatrix: [IsString, IsPosInt, IsField]
O: CanonicalQuadraticForm: [IsString, IsPosInt, IsField]
O: SOdesargues: [IsInt, IsPosInt, IsFieldandIsFinite]
O: GOdesargues: [IsInt, IsPosInt, IsFieldandIsFinite]
O: SUdesargues: [IsPosInt, IsFieldandIsFinite]
O: GUdesargues: [IsPosInt, IsFieldandIsFinite]
O: Spdesargues: [IsPosInt, IsFieldandIsFinite]
O: GeneralSymplecticGroup: [IsPosInt, IsFieldandIsFinite]
O: GSpdesargues: [IsPosInt, IsFieldandIsFinite]
O: DeltaOminus: [IsPosInt, IsFieldandIsFinite]
O: DeltaOplus: [IsPosInt, IsFieldandIsFinite]
O: GammaOminus: [IsPosInt, IsFieldandIsFinite]
O: GammaO: [IsPosInt, IsFieldandIsFinite]
O: GammaOplus: [IsPosInt, IsFieldandIsFinite]
O: GammaU: [IsPosInt, IsFieldandIsFinite]
O: GammaSp: [IsPosInt, IsFieldandIsFinite]

projectivespace.gd: operations

O: ProjectiveSpace: [IsInt, IsField]
O: ProjectiveSpace: [IsInt, IsPosInt]
O: IsIncident: [IsSubspaceOfProjectiveSpace, IsProjectiveSpace]
O: IsIncident: [IsProjectiveSpace, IsSubspaceOfProjectiveSpace]
O: IsIncident: [IsProjectiveSpace, IsProjectiveSpace]
O: Hyperplanes: [IsProjectiveSpace]
O: BaerSublineOnThreePoints:   [ IsSubspaceOfProjectiveSpace,  IsSubspaceOfProjectiveSpace,  IsSubspaceOfProjectiveSpace] 
O: BaerSubplaneOnQuadrangle:   [ IsSubspaceOfProjectiveSpace,  IsSubspaceOfProjectiveSpace,      IsSubspaceOfProjectiveSpace,  IsSubspaceOfProjectiveSpace ] 
O: RandomSubspace: [IsProjectiveSpace, IsInt]
O: RandomSubspace: [IsSubspaceOfProjectiveSpace, IsInt]
O: RandomSubspace: [IsProjectiveSpace]
O: Span: [IsProjectiveSpace, IsSubspaceOfProjectiveSpace]
O: Span: [IsSubspaceOfProjectiveSpace, IsProjectiveSpace]
O: Span: [IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace, IsBool]
O: Span: [IsList, IsBool]
O: Meet: [IsSubspaceOfProjectiveSpace, IsProjectiveSpace]
O: Meet: [IsProjectiveSpace, IsSubspaceOfProjectiveSpace]
O: Meet: [IsList]
O: DualCoordinatesOfHyperplane: [IsSubspaceOfProjectiveSpace]
O: HyperplaneByDualCoordinates: [IsProjectiveSpace, IsList]
O: ComplementSpace: [IsVectorSpace, IsFFECollColl]
O: ElationOfProjectiveSpace: [IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace]
O: ProjectiveElationGroup: [IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace]
O: ProjectiveElationGroup: [IsSubspaceOfProjectiveSpace]
O: HomologyOfProjectiveSpace: [IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace,  IsSubspaceOfProjectiveSpace ] 
O: ProjectiveHomologyGroup: [IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace]
O: SingerCycleMat: [IsInt, IsInt]
O: SingerCycleCollineation: [IsInt, IsInt]

correlations.gd: operations

O: StandardDualityOfProjectiveSpace: [IsProjectiveSpace]
O: IdentityMappingOfElementsOfProjectiveSpace: [IsProjectiveSpace]
O: ActionOnAllPointsHyperplanes: [IsProjGroupWithFrobWithPSIsom]
O: ProjElWithFrobWithPSIsom:    [IsMatrix and IsFFECollColl,  IsMapping,  IsField] 
O: ProjElWithFrobWithPSIsom:    [IsMatrix and IsFFECollColl,  IsMapping,  IsField,    IsStandardDualityOfProjectiveSpace] 
O: ProjElWithFrobWithPSIsom:    [IsMatrix and IsFFECollColl,  IsMapping,  IsField,    IsGeneralMapping and IsSPGeneralMapping and IsOne] 
O: ProjElsWithFrobWithPSIsom: [IsList, IsField]
O: SetAsNiceMono:                   [IsProjGroupWithFrobWithPSIsom,  IsGroupHomomorphism] 
O: CorrelationOfProjectiveSpace: [IsList, IsField]
O: CorrelationOfProjectiveSpace: [IsList, IsMapping, IsField]
O: CorrelationOfProjectiveSpace: [IsList, IsField, IsStandardDualityOfProjectiveSpace]
O: CorrelationOfProjectiveSpace: [IsList, IsField, IsIdentityMappingOfElementsOfProjectiveSpace]
O: CorrelationOfProjectiveSpace: [IsList, IsMapping, IsField, IsStandardDualityOfProjectiveSpace]
O: CorrelationOfProjectiveSpace: [IsList, IsMapping, IsField, IsIdentityMappingOfElementsOfProjectiveSpace]
O: CorrelationOfProjectiveSpace: [IsProjectiveSpace, IsMatrix, IsMapping, IsStandardDualityOfProjectiveSpace]
O: CorrelationOfProjectiveSpace: [IsProjectiveSpace, IsMatrix, IsMapping, IsIdentityMappingOfElementsOfProjectiveSpace]
O: Correlation: [IsProjectiveSpace, IsMatrix, IsMapping, IsStandardDualityOfProjectiveSpace]
O: Correlation: [IsProjectiveSpace, IsMatrix, IsMapping, IsIdentityMappingOfElementsOfProjectiveSpace]
O: MatrixOfCorrelation: [IsProjGrpElWithFrobWithPSIsomandIsProjGrpElWithFrobWithPSIsomRep]
O: FieldAutomorphism: [IsProjGrpElWithFrobWithPSIsomandIsProjGrpElWithFrobWithPSIsomRep]
O: ProjectiveSpaceIsomorphism: [IsProjGrpElWithFrobWithPSIsomandIsProjGrpElWithFrobWithPSIsomRep]
O: PolarityOfProjectiveSpaceOp: [IsForm]
O: PolarityOfProjectiveSpace: [IsForm]
O: PolarityOfProjectiveSpace: [IsMatrix, IsFieldandIsFinite]
O: PolarityOfProjectiveSpace: [IsMatrix, IsFrobeniusAutomorphism, IsFieldandIsFinite]
O: HermitianPolarityOfProjectiveSpace: [IsMatrix, IsFieldandIsFinite]
O: PolarityOfProjectiveSpace: [IsClassicalPolarSpace]
O: BaseField: [IsPolarityOfProjectiveSpace]
O: IsAbsoluteElement: [IsElementOfIncidenceStructure, IsPolarityOfProjectiveSpace]
O: GeometryOfAbsolutePoints: [IsPolarityOfProjectiveSpace]
O: AbsolutePoints: [IsPolarityOfProjectiveSpace]
O: PolarSpace: [IsPolarityOfProjectiveSpace]

polarspace.gd: operations

O: PolarSpaceStandard: [IsForm, IsBool]
O: PolarSpace: [IsForm, IsField, IsGroup, IsFunction]
O: PolarSpace: [IsForm]
O: PolarMap: [IsClassicalPolarSpace]
O: TangentSpace: [IsSubspaceOfClassicalPolarSpace]
O: TangentSpace: [IsClassicalPolarSpace, IsSubspaceOfProjectiveSpace]
O: Pole: [IsClassicalPolarSpace, IsSubspaceOfProjectiveSpace]
O: TypeOfSubspace: [IsClassicalPolarSpace, IsSubspaceOfProjectiveSpace]
O: CanonicalOrbitRepresentativeForSubspaces: [IsString, IsPosInt, IsField]
O: RandomSubspace: [IsClassicalPolarSpace, IsPosInt]
O: NumberOfTotallySingularSubspaces: [IsClassicalPolarSpace, IsPosInt]
O: EllipticQuadric: [IsPosInt, IsField]
O: EllipticQuadric: [IsPosInt, IsPosInt]
O: SymplecticSpace: [IsPosInt, IsField]
O: SymplecticSpace: [IsPosInt, IsPosInt]
O: ParabolicQuadric: [IsPosInt, IsField]
O: ParabolicQuadric: [IsPosInt, IsPosInt]
O: HyperbolicQuadric: [IsPosInt, IsField]
O: HyperbolicQuadric: [IsPosInt, IsPosInt]
O: HermitianPolarSpace: [IsPosInt, IsField]
O: HermitianPolarSpace: [IsPosInt, IsPosInt]
O: CanonicalPolarSpace: [IsClassicalPolarSpace]
O: StandardPolarSpace: [IsClassicalPolarSpace]
O: Span: [IsSubspaceOfClassicalPolarSpace, IsSubspaceOfClassicalPolarSpace, IsBool]

morphisms.gd: operations

O: GeometryMorphismByFunction:   [ IsAnyElementsOfIncidenceStructure,  IsAnyElementsOfIncidenceStructure,     IsFunction,  IsBool,  IsFunction ] 
O: GeometryMorphismByFunction:   [ IsAnyElementsOfIncidenceStructure,  IsAnyElementsOfIncidenceStructure,     IsFunction,  IsFunction ] 
O: GeometryMorphismByFunction:   [ IsAnyElementsOfIncidenceStructure,  IsAnyElementsOfIncidenceStructure,     IsFunction ] 
O: IsomorphismPolarSpacesProjectionFromNucleus: [IsClassicalPolarSpace, IsClassicalPolarSpace, IsBool]
O: IsomorphismPolarSpacesNC:  [ IsClassicalPolarSpace,  IsClassicalPolarSpace,  IsBool ]
O: IsomorphismPolarSpacesNC:                      [ IsClassicalPolarSpace,  IsClassicalPolarSpace ]
O: IsomorphismPolarSpaces:                      [ IsClassicalPolarSpace,  IsClassicalPolarSpace,  IsBool ]
O: IsomorphismPolarSpaces:                      [ IsClassicalPolarSpace,  IsClassicalPolarSpace ]
O: NaturalEmbeddingBySubspace:                      [ IsLieGeometry,  IsLieGeometry,  IsSubspaceOfProjectiveSpace ]
O: NaturalEmbeddingBySubspaceNC:                      [ IsLieGeometry,  IsLieGeometry,  IsSubspaceOfProjectiveSpace ]
O: NaturalProjectionBySubspace:                      [ IsClassicalPolarSpace,  IsSubspaceOfClassicalPolarSpace ]
O: NaturalProjectionBySubspace:                      [ IsProjectiveSpace,  IsSubspaceOfProjectiveSpace ]
O: NaturalProjectionBySubspaceNC:                      [ IsClassicalPolarSpace,  IsSubspaceOfClassicalPolarSpace ]
O: NaturalProjectionBySubspaceNC:                      [ IsProjectiveSpace,  IsSubspaceOfProjectiveSpace ]
O: ShrinkMat: [IsBasis, IsMatrix]
O: ShrinkMat: [IsField, IsField, IsVector]
O: ShrinkVec: [IsField, IsField, IsVector]
O: ShrinkVec: [IsField, IsField, IsVector, IsBasis]
O: BlownUpProjectiveSpace: [IsBasis, IsProjectiveSpace]
O: BlownUpProjectiveSpaceBySubfield: [IsField, IsProjectiveSpace]
O: BlownUpSubspaceOfProjectiveSpace: [IsBasis, IsSubspaceOfProjectiveSpace]
O: BlownUpSubspaceOfProjectiveSpaceBySubfield: [IsField, IsSubspaceOfProjectiveSpace]
O: IsDesarguesianSpreadElement: [IsBasis, IsSubspaceOfProjectiveSpace]
O: IsBlownUpSubspaceOfProjectiveSpace: [IsBasis, IsSubspaceOfProjectiveSpace]
O: NaturalEmbeddingByFieldReduction:                      [ IsProjectiveSpace,  IsField,  IsBasis ]
O: NaturalEmbeddingByFieldReduction:                      [ IsProjectiveSpace,  IsField ]
O: NaturalEmbeddingByFieldReduction:                      [ IsProjectiveSpace,  IsProjectiveSpace ]
O: NaturalEmbeddingByFieldReduction:                      [ IsProjectiveSpace,  IsProjectiveSpace,  IsBasis ]
O: BilinearFormFieldReduction: [IsBilinearForm, IsField, IsFFE, IsBasis]
O: QuadraticFormFieldReduction: [IsQuadraticForm, IsField, IsFFE, IsBasis]
O: HermitianFormFieldReduction: [IsHermitianForm, IsField, IsFFE, IsBasis]
O: BilinearFormFieldReduction: [IsBilinearForm, IsField, IsFFE]
O: QuadraticFormFieldReduction: [IsQuadraticForm, IsField, IsFFE]
O: HermitianFormFieldReduction: [IsHermitianForm, IsField, IsFFE]
O: NaturalEmbeddingByFieldReduction: [IsClassicalPolarSpace, IsField, IsFFE, IsBasis, IsBool]
O: NaturalEmbeddingByFieldReduction: [IsClassicalPolarSpace, IsField, IsFFE, IsBasis]
O: NaturalEmbeddingByFieldReduction: [IsClassicalPolarSpace, IsField, IsFFE, IsBool]
O: NaturalEmbeddingByFieldReduction: [IsClassicalPolarSpace, IsField, IsFFE]
O: NaturalEmbeddingByFieldReduction: [IsClassicalPolarSpace, IsField, IsBool]
O: NaturalEmbeddingByFieldReduction: [IsClassicalPolarSpace, IsField]
O: NaturalEmbeddingByFieldReduction: [IsClassicalPolarSpace, IsClassicalPolarSpace, IsBool]
O: NaturalEmbeddingByFieldReduction: [IsClassicalPolarSpace, IsClassicalPolarSpace]
O: CanonicalEmbeddingByFieldReduction: [ IsClassicalPolarSpace,  IsField,  IsBool ]
O: CanonicalEmbeddingByFieldReduction: [ IsClassicalPolarSpace,  IsClassicalPolarSpace,  IsBool ]
O: NaturalEmbeddingBySubfield:                      [ IsProjectiveSpace,  IsProjectiveSpace ]
O: NaturalEmbeddingBySubfield:  [ IsClassicalPolarSpace,  IsClassicalPolarSpace,  IsBool ]
O: NaturalEmbeddingBySubfield:                      [ IsClassicalPolarSpace,  IsClassicalPolarSpace ]
O: PluckerCoordinates: [IsMatrix]
O: InversePluckerCoordinates: [IsVector]
O: PluckerCoordinates: [IsSubspaceOfProjectiveSpace]
O: KleinCorrespondence: [IsField, IsBool]
O: KleinCorrespondence: [IsField]
O: KleinCorrespondence: [IsPosInt, IsBool]
O: KleinCorrespondence: [IsPosInt]
O: KleinCorrespondence: [IsClassicalPolarSpace, IsBool]
O: KleinCorrespondence: [IsClassicalPolarSpace]
O: KleinCorrespondenceExtended: [IsField, IsBool]
O: KleinCorrespondenceExtended: [IsField]
O: KleinCorrespondenceExtended: [IsPosInt, IsBool]
O: KleinCorrespondenceExtended: [IsPosInt]
O: KleinCorrespondenceExtended: [IsClassicalPolarSpace, IsBool]
O: KleinCorrespondenceExtended: [IsClassicalPolarSpace]
O: NaturalDualitySymplectic: [IsClassicalGQ, IsClassicalGQ, IsBool, IsBool]
O: NaturalDualityHermitian: [IsClassicalGQ, IsClassicalGQ, IsBool, IsBool]
O: SelfDualitySymplectic: [IsClassicalGQ, IsBool]
O: SelfDualityParabolic: [IsClassicalGQ, IsBool]
O: NaturalDuality: [IsClassicalGQ, IsClassicalGQ, IsBool]
O: NaturalDuality: [IsClassicalGQ, IsClassicalGQ]
O: NaturalDuality: [IsClassicalGQ, IsBool]
O: NaturalDuality: [IsClassicalGQ]
O: SelfDuality: [IsClassicalGQ, IsBool]
O: SelfDuality: [IsClassicalGQ]
O: ProjectiveCompletion: [IsAffineSpace]

enumerators.gd: operations

O: AntonEnumerator: [IsSubspacesOfClassicalPolarSpace]
O: EnumeratorByOrbit: [IsSubspacesOfClassicalPolarSpace]

diagram.gd: operations

O: CosetGeometry: [IsGroup, IsHomogeneousList]
O: ParabolicSubgroups: [IsCosetGeometry]
O: AmbientGroup: [IsCosetGeometry]
O: FlagToStandardFlag: [IsCosetGeometry, IsFlagOfCosetGeometry]
O: ResidueOfFlag: [IsFlagOfCosetGeometry]
O: CanonicalResidueOfFlag: [IsCosetGeometry, IsFlagOfCosetGeometry]
O: RandomElement: [IsCosetGeometry]
O: RandomFlag: [IsCosetGeometry]
O: RandomChamber: [IsCosetGeometry]
O: AutGroupIncidenceStructureWithNauty: [IsCosetGeometry]
O: CorGroupIncidenceStructureWithNauty: [IsCosetGeometry]
O: IsIsomorphicIncidenceStructureWithNauty: [IsCosetGeometry, IsCosetGeometry]
O: Rk2GeoDiameter: [IsCosetGeometry, IsPosInt]
O: Rk2GeoGonality: [IsCosetGeometry]
O: GeometryOfRank2Residue: [IsRank2Residue]
O: GeometryFromLabelledGraph: [IsObjectandIS_REC]
O: Rank2Residues: [IsIncidenceGeometry]
O: MakeRank2Residue: [IsRank2Residue]

varieties.gd: operations

O: AlgebraicVariety: [IsProjectiveSpace, IsList]
O: AlgebraicVariety: [IsAffineSpace, IsList]
O: AlgebraicVariety: [IsProjectiveSpace, IsPolynomialRing, IsList]
O: AlgebraicVariety: [IsAffineSpace, IsPolynomialRing, IsList]
O: PointsOfAlgebraicVariety: [IsAlgebraicVariety]
O: Points: [IsAlgebraicVariety]
O: ProjectiveVariety: [IsProjectiveSpace, IsPolynomialRing, IsList]
O: ProjectiveVariety: [IsProjectiveSpace, IsList]
O: HermitianVariety: [IsPosInt, IsField]
O: HermitianVariety: [IsPosInt, IsPosInt]
O: HermitianVariety: [IsProjectiveSpace, IsPolynomialRing, IsPolynomial]
O: HermitianVariety: [IsProjectiveSpace, IsPolynomial]
O: QuadraticVariety: [IsPosInt, IsField]
O: QuadraticVariety: [IsPosInt, IsField, IsString]
O: QuadraticVariety: [IsPosInt, IsPosInt]
O: QuadraticVariety: [IsPosInt, IsPosInt, IsString]
O: QuadraticVariety: [IsProjectiveSpace, IsPolynomialRing, IsPolynomial]
O: QuadraticVariety: [IsProjectiveSpace, IsPolynomial]
O: PolarSpace: [IsProjectiveVariety]
O: AffineVariety: [IsAffineSpace, IsPolynomialRing, IsList]
O: AffineVariety: [IsAffineSpace, IsList]
O: SegreMap: [IsHomogeneousList]
O: SegreMap: [IsHomogeneousList, IsField]
O: SegreVariety: [IsHomogeneousList]
O: SegreVariety: [IsHomogeneousList, IsField]
O: PointsOfSegreVariety: [IsSegreVariety]
O: SegreMap: [IsSegreVariety]
O: SegreMap: [IsProjectiveSpace, IsProjectiveSpace]
O: SegreMap: [IsPosInt, IsPosInt, IsField]
O: SegreMap: [IsPosInt, IsPosInt, IsPosInt]
O: SegreVariety: [IsProjectiveSpace, IsProjectiveSpace]
O: SegreVariety: [IsPosInt, IsPosInt, IsField]
O: SegreVariety: [IsPosInt, IsPosInt, IsPosInt]
O: VeroneseMap: [IsProjectiveSpace]
O: VeroneseMap: [IsPosInt, IsField]
O: VeroneseMap: [IsPosInt, IsPosInt]
O: VeroneseVariety: [IsProjectiveSpace]
O: VeroneseVariety: [IsPosInt, IsField]
O: VeroneseVariety: [IsPosInt, IsPosInt]
O: PointsOfVeroneseVariety: [IsVeroneseVariety]
O: VeroneseMap: [IsVeroneseVariety]
O: GrassmannCoordinates: [IsSubspaceOfProjectiveSpace]
O: GrassmannMap: [IsPosInt, IsProjectiveSpace]
O: GrassmannMap: [IsPosInt, IsPosInt, IsPosInt]
O: GrassmannMap: [IsSubspacesOfProjectiveSpace]
O: GrassmannMap: [IsGrassmannVariety]
O: GrassmannVariety: [IsPosInt, IsProjectiveSpace]
O: GrassmannVariety: [IsPosInt, IsPosInt, IsField]
O: GrassmannVariety: [IsPosInt, IsPosInt, IsPosInt]
O: GrassmannVariety: [IsSubspacesOfProjectiveSpace]
O: PointsOfGrassmannVariety: [IsGrassmannVariety]
O: ConicOnFivePoints: [IsHomogeneousListand                              IsSubspaceOfProjectiveSpaceCollection ] 

affinespace.gd: operations

O: VectorSpaceTransversal: [IsVectorSpace, IsFFECollColl]
O: VectorSpaceTransversalElement: [IsVectorSpace, IsFFECollColl, IsVector]
O: AffineSpace: [IsPosInt, IsField]
O: AffineSpace: [IsPosInt, IsPosInt]
O: Hyperplanes: [IsAffineSpace]
O: AffineSubspace: [IsAffineSpace, IsRowVector]
O: AffineSubspace: [IsAffineSpace, IsCVecRep]
O: AffineSubspace: [IsAffineSpace, IsRowVector, IsPlistRep]
O: AffineSubspace: [IsAffineSpace, IsRowVector, Is8BitMatrixRep]
O: AffineSubspace: [IsAffineSpace, IsRowVector, IsGF2MatrixRep]
O: AffineSubspace: [IsAffineSpace, IsCVecRep, IsCMatRep]
O: RandomSubspace: [IsAffineSpace, IsInt]
O: IsParallel: [IsSubspaceOfAffineSpace, IsSubspaceOfAffineSpace]
O: UnderlyingVectorSpace: [IsAffineSpace]
O: ParallelClass: [IsAffineSpace, IsSubspaceOfAffineSpace]
O: ParallelClass: [IsSubspaceOfAffineSpace]

affinegroup.gd: operations


gpolygons.gd: operations

O: GeneralisedPolygonByBlocks: [IsHomogeneousList]
O: GeneralisedPolygonByIncidenceMatrix: [IsMatrix]
O: GeneralisedPolygonByElements: [IsSet, IsSet, IsFunction]
O: GeneralisedPolygonByElements: [IsSet, IsSet, IsFunction, IsGroup, IsFunction]
O: DistanceBetweenElements: [IsElementOfGeneralisedPolygon, IsElementOfGeneralisedPolygon]
O: DistanceBetweenElements: [IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace]
O: BlockDesignOfGeneralisedPolygon: [IsGeneralisedPolygon]
O: SplitCayleyHexagon: [IsFieldandIsFinite]
O: SplitCayleyHexagon: [IsPosInt]
O: SplitCayleyHexagon: [IsClassicalPolarSpace]
O: TwistedTrialityHexagon: [IsFieldandIsFinite]
O: TwistedTrialityHexagon: [IsPosInt]
O: TwistedTrialityHexagon: [IsClassicalPolarSpace]
O: G2fining: [IsPosInt, IsFieldandIsFinite]
O: 3D4fining: [IsFieldandIsFinite]
O: IsKantorFamily: [IsGroup, IsList, IsList]
O: EGQByKantorFamily: [IsGroup, IsList, IsList]
O: Wrap: [IsElationGQByKantorFamily, IsPosInt, IsPosInt, IsObject]
O: IsAnisotropic: [IsFFECollColl, IsFieldandIsFinite]
O: IsqClan: [IsFFECollCollColl, IsFieldandIsFinite]
O: qClan: [IsFFECollCollColl, IsField]
O: LinearqClan: [IsPosInt]
O: FisherThasWalkerKantorBettenqClan: [IsPosInt]
O: KantorMonomialqClan: [IsPosInt]
O: KantorKnuthqClan: [IsPosInt]
O: FisherqClan: [IsPosInt]
O: BLTSetByqClan: [IsqClanObjandIsqClanRep]
O: KantorFamilyByqClan: [IsqClanObjandIsqClanRep]
O: EGQByqClan: [IsqClanObjandIsqClanRep]
O: EGQByBLTSet: [IsList, IsSubspaceOfProjectiveSpace, IsSubspaceOfProjectiveSpace]
O: EGQByBLTSet: [IsList]
O: FlockGQByqClan: [IsqClanObj]

